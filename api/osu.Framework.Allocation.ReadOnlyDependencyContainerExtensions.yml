### YamlMime:ManagedReference
items:
- uid: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions
  commentId: T:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions
  id: ReadOnlyDependencyContainerExtensions
  parent: osu.Framework.Allocation
  children:
  - osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer)
  - osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,osu.Framework.Allocation.CacheInfo)
  - osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@)
  - osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@,osu.Framework.Allocation.CacheInfo)
  langs:
  - csharp
  - vb
  name: ReadOnlyDependencyContainerExtensions
  nameWithType: ReadOnlyDependencyContainerExtensions
  fullName: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions
  type: Class
  source:
    remote:
      path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ReadOnlyDependencyContainerExtensions
    path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
    startLine: 38
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Allocation
  syntax:
    content: public static class ReadOnlyDependencyContainerExtensions
    content.vb: Public Module ReadOnlyDependencyContainerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer)
  commentId: M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer)
  id: Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer)
  isExtensionMethod: true
  parent: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions
  langs:
  - csharp
  - vb
  name: Get<T>(IReadOnlyDependencyContainer)
  nameWithType: ReadOnlyDependencyContainerExtensions.Get<T>(IReadOnlyDependencyContainer)
  fullName: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get<T>(osu.Framework.Allocation.IReadOnlyDependencyContainer)
  type: Method
  source:
    remote:
      path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Get
    path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
    startLine: 46
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Allocation
  summary: Retrieves a cached dependency of type <code class="typeparamref">T</code> if it exists, and null otherwise.
  example: []
  syntax:
    content: 'public static T Get<T>(this IReadOnlyDependencyContainer container) where T : class'
    parameters:
    - id: container
      type: osu.Framework.Allocation.IReadOnlyDependencyContainer
      description: The <xref href="osu.Framework.Allocation.IReadOnlyDependencyContainer" data-throw-if-not-resolved="false"></xref> to query.
    typeParameters:
    - id: T
      description: The dependency type to query for.
    return:
      type: '{T}'
      description: The requested dependency, or null if not found.
    content.vb: Public Shared Function [Get](Of T As Class)(container As IReadOnlyDependencyContainer) As T
  overload: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get*
  nameWithType.vb: ReadOnlyDependencyContainerExtensions.Get(Of T)(IReadOnlyDependencyContainer)
  fullName.vb: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get(Of T)(osu.Framework.Allocation.IReadOnlyDependencyContainer)
  name.vb: Get(Of T)(IReadOnlyDependencyContainer)
- uid: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,osu.Framework.Allocation.CacheInfo)
  commentId: M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,osu.Framework.Allocation.CacheInfo)
  id: Get``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,osu.Framework.Allocation.CacheInfo)
  isExtensionMethod: true
  parent: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions
  langs:
  - csharp
  - vb
  name: Get<T>(IReadOnlyDependencyContainer, CacheInfo)
  nameWithType: ReadOnlyDependencyContainerExtensions.Get<T>(IReadOnlyDependencyContainer, CacheInfo)
  fullName: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get<T>(osu.Framework.Allocation.IReadOnlyDependencyContainer, osu.Framework.Allocation.CacheInfo)
  type: Method
  source:
    remote:
      path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Get
    path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
    startLine: 57
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Allocation
  summary: Retrieves a cached dependency of type <code class="typeparamref">T</code> if it exists, and null otherwise.
  example: []
  syntax:
    content: 'public static T Get<T>(this IReadOnlyDependencyContainer container, CacheInfo info) where T : class'
    parameters:
    - id: container
      type: osu.Framework.Allocation.IReadOnlyDependencyContainer
      description: The <xref href="osu.Framework.Allocation.IReadOnlyDependencyContainer" data-throw-if-not-resolved="false"></xref> to query.
    - id: info
      type: osu.Framework.Allocation.CacheInfo
      description: Extra information that identifies the cached dependency.
    typeParameters:
    - id: T
      description: The dependency type to query for.
    return:
      type: '{T}'
      description: The requested dependency, or null if not found.
    content.vb: Public Shared Function [Get](Of T As Class)(container As IReadOnlyDependencyContainer, info As CacheInfo) As T
  overload: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get*
  nameWithType.vb: ReadOnlyDependencyContainerExtensions.Get(Of T)(IReadOnlyDependencyContainer, CacheInfo)
  fullName.vb: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get(Of T)(osu.Framework.Allocation.IReadOnlyDependencyContainer, osu.Framework.Allocation.CacheInfo)
  name.vb: Get(Of T)(IReadOnlyDependencyContainer, CacheInfo)
- uid: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@)
  commentId: M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@)
  id: TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@)
  isExtensionMethod: true
  parent: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions
  langs:
  - csharp
  - vb
  name: TryGet<T>(IReadOnlyDependencyContainer, out T)
  nameWithType: ReadOnlyDependencyContainerExtensions.TryGet<T>(IReadOnlyDependencyContainer, out T)
  fullName: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet<T>(osu.Framework.Allocation.IReadOnlyDependencyContainer, out T)
  type: Method
  source:
    remote:
      path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TryGet
    path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
    startLine: 92
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Allocation
  summary: Tries to retrieve a cached dependency of type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public static bool TryGet<T>(this IReadOnlyDependencyContainer container, out T value) where T : class'
    parameters:
    - id: container
      type: osu.Framework.Allocation.IReadOnlyDependencyContainer
      description: The <xref href="osu.Framework.Allocation.IReadOnlyDependencyContainer" data-throw-if-not-resolved="false"></xref> to query.
    - id: value
      type: '{T}'
      description: The requested dependency, or null if not found.
    typeParameters:
    - id: T
      description: The dependency type to query for.
    return:
      type: System.Boolean
      description: Whether the requested dependency existed.
    content.vb: Public Shared Function TryGet(Of T As Class)(container As IReadOnlyDependencyContainer, value As T) As Boolean
  overload: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet*
  nameWithType.vb: ReadOnlyDependencyContainerExtensions.TryGet(Of T)(IReadOnlyDependencyContainer, T)
  fullName.vb: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet(Of T)(osu.Framework.Allocation.IReadOnlyDependencyContainer, T)
  name.vb: TryGet(Of T)(IReadOnlyDependencyContainer, T)
- uid: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@,osu.Framework.Allocation.CacheInfo)
  commentId: M:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@,osu.Framework.Allocation.CacheInfo)
  id: TryGet``1(osu.Framework.Allocation.IReadOnlyDependencyContainer,``0@,osu.Framework.Allocation.CacheInfo)
  isExtensionMethod: true
  parent: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions
  langs:
  - csharp
  - vb
  name: TryGet<T>(IReadOnlyDependencyContainer, out T, CacheInfo)
  nameWithType: ReadOnlyDependencyContainerExtensions.TryGet<T>(IReadOnlyDependencyContainer, out T, CacheInfo)
  fullName: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet<T>(osu.Framework.Allocation.IReadOnlyDependencyContainer, out T, osu.Framework.Allocation.CacheInfo)
  type: Method
  source:
    remote:
      path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TryGet
    path: osu.Framework/Allocation/IReadOnlyDependencyContainer.cs
    startLine: 104
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Allocation
  summary: Tries to retrieve a cached dependency of type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: 'public static bool TryGet<T>(this IReadOnlyDependencyContainer container, out T value, CacheInfo info) where T : class'
    parameters:
    - id: container
      type: osu.Framework.Allocation.IReadOnlyDependencyContainer
      description: The <xref href="osu.Framework.Allocation.IReadOnlyDependencyContainer" data-throw-if-not-resolved="false"></xref> to query.
    - id: value
      type: '{T}'
      description: The requested dependency, or null if not found.
    - id: info
      type: osu.Framework.Allocation.CacheInfo
      description: Extra information that identifies the cached dependency.
    typeParameters:
    - id: T
      description: The dependency type to query for.
    return:
      type: System.Boolean
      description: Whether the requested dependency existed.
    content.vb: Public Shared Function TryGet(Of T As Class)(container As IReadOnlyDependencyContainer, value As T, info As CacheInfo) As Boolean
  overload: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet*
  nameWithType.vb: ReadOnlyDependencyContainerExtensions.TryGet(Of T)(IReadOnlyDependencyContainer, T, CacheInfo)
  fullName.vb: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet(Of T)(osu.Framework.Allocation.IReadOnlyDependencyContainer, T, osu.Framework.Allocation.CacheInfo)
  name.vb: TryGet(Of T)(IReadOnlyDependencyContainer, T, CacheInfo)
references:
- uid: osu.Framework.Allocation
  commentId: N:osu.Framework.Allocation
  href: osu.html
  name: osu.Framework.Allocation
  nameWithType: osu.Framework.Allocation
  fullName: osu.Framework.Allocation
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Allocation
    name: Allocation
    href: osu.Framework.Allocation.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Allocation
    name: Allocation
    href: osu.Framework.Allocation.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: osu.Framework.Allocation.IReadOnlyDependencyContainer
  commentId: T:osu.Framework.Allocation.IReadOnlyDependencyContainer
  parent: osu.Framework.Allocation
  href: osu.Framework.Allocation.IReadOnlyDependencyContainer.html
  name: IReadOnlyDependencyContainer
  nameWithType: IReadOnlyDependencyContainer
  fullName: osu.Framework.Allocation.IReadOnlyDependencyContainer
- uid: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get*
  commentId: Overload:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get
  href: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.html#osu_Framework_Allocation_ReadOnlyDependencyContainerExtensions_Get__1_osu_Framework_Allocation_IReadOnlyDependencyContainer_
  name: Get
  nameWithType: ReadOnlyDependencyContainerExtensions.Get
  fullName: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: osu.Framework.Allocation.CacheInfo
  commentId: T:osu.Framework.Allocation.CacheInfo
  parent: osu.Framework.Allocation
  href: osu.Framework.Allocation.CacheInfo.html
  name: CacheInfo
  nameWithType: CacheInfo
  fullName: osu.Framework.Allocation.CacheInfo
- uid: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet*
  commentId: Overload:osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet
  href: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.html#osu_Framework_Allocation_ReadOnlyDependencyContainerExtensions_TryGet__1_osu_Framework_Allocation_IReadOnlyDependencyContainer___0__
  name: TryGet
  nameWithType: ReadOnlyDependencyContainerExtensions.TryGet
  fullName: osu.Framework.Allocation.ReadOnlyDependencyContainerExtensions.TryGet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
