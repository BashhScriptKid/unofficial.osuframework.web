### YamlMime:ManagedReference
items:
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  commentId: T:osu.Framework.Extensions.TypeExtensions.TypeExtensions
  id: TypeExtensions
  parent: osu.Framework.Extensions.TypeExtensions
  children:
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes(System.Type)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier(System.Reflection.FieldInfo)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier(System.Reflection.MethodInfo)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType(System.Type)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Type)
  - osu.Framework.Extensions.TypeExtensions.TypeExtensions.ReadableName(System.Type)
  langs:
  - csharp
  - vb
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  type: Class
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TypeExtensions
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 13
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  syntax:
    content: public static class TypeExtensions
    content.vb: Public Module TypeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes(System.Type)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes(System.Type)
  id: EnumerateBaseTypes(System.Type)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: EnumerateBaseTypes(Type)
  nameWithType: TypeExtensions.EnumerateBaseTypes(Type)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes(System.Type)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: EnumerateBaseTypes
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 44
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  summary: Return every base type until (and excluding) <xref href="System.Object" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static IEnumerable<Type> EnumerateBaseTypes(this Type t)
    parameters:
    - id: t
      type: System.Type
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public Shared Function EnumerateBaseTypes(t As Type) As IEnumerable(Of Type)
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.ReadableName(System.Type)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.ReadableName(System.Type)
  id: ReadableName(System.Type)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: ReadableName(Type)
  nameWithType: TypeExtensions.ReadableName(Type)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.ReadableName(System.Type)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ReadableName
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 54
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  syntax:
    content: public static string ReadableName(this Type t)
    parameters:
    - id: t
      type: System.Type
    return:
      type: System.String
    content.vb: Public Shared Function ReadableName(t As Type) As String
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.ReadableName*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier(System.Reflection.FieldInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier(System.Reflection.FieldInfo)
  id: GetAccessModifier(System.Reflection.FieldInfo)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: GetAccessModifier(FieldInfo)
  nameWithType: TypeExtensions.GetAccessModifier(FieldInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier(System.Reflection.FieldInfo)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: GetAccessModifier
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 56
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  syntax:
    content: public static AccessModifier GetAccessModifier(this FieldInfo field)
    parameters:
    - id: field
      type: System.Reflection.FieldInfo
    return:
      type: osu.Framework.Extensions.TypeExtensions.AccessModifier
    content.vb: Public Shared Function GetAccessModifier(field As FieldInfo) As AccessModifier
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier(System.Reflection.MethodInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier(System.Reflection.MethodInfo)
  id: GetAccessModifier(System.Reflection.MethodInfo)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: GetAccessModifier(MethodInfo)
  nameWithType: TypeExtensions.GetAccessModifier(MethodInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier(System.Reflection.MethodInfo)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: GetAccessModifier
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 74
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  syntax:
    content: public static AccessModifier GetAccessModifier(this MethodInfo method)
    parameters:
    - id: method
      type: System.Reflection.MethodInfo
    return:
      type: osu.Framework.Extensions.TypeExtensions.AccessModifier
    content.vb: Public Shared Function GetAccessModifier(method As MethodInfo) As AccessModifier
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Type)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Type)
  id: IsNullable(System.Type)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: IsNullable(Type)
  nameWithType: TypeExtensions.IsNullable(Type)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Type)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: IsNullable
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 105
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  summary: >-
    Determines whether the specified type is a <xref href="System.Nullable%601" data-throw-if-not-resolved="false"></xref> type.

    <p>

    https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/nullable-types/how-to-identify-a-nullable-type

    </p>
  remarks: >-
    When nullable reference types are enabled, prefer to use one of:

    <xref href="osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)" data-throw-if-not-resolved="false"></xref>, <xref href="osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)" data-throw-if-not-resolved="false"></xref>, <xref href="osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)" data-throw-if-not-resolved="false"></xref>, or <xref href="osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)" data-throw-if-not-resolved="false"></xref>,

    in order to properly handle events/properties/fields/parameters.
  example: []
  syntax:
    content: public static bool IsNullable(this Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNullable(type As Type) As Boolean
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType(System.Type)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType(System.Type)
  id: GetUnderlyingNullableType(System.Type)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: GetUnderlyingNullableType(Type)
  nameWithType: TypeExtensions.GetUnderlyingNullableType(Type)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType(System.Type)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: GetUnderlyingNullableType
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 113
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  summary: Gets the underlying type of a <xref href="System.Nullable%601" data-throw-if-not-resolved="false"></xref>.
  remarks: This method is cached.
  example: []
  syntax:
    content: public static Type GetUnderlyingNullableType(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: The potentially nullable type.
    return:
      type: System.Type
      description: The underlying type, or null if one does not exist.
    content.vb: Public Shared Function GetUnderlyingNullableType(type As Type) As Type
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
  id: IsNullable(System.Reflection.EventInfo)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: IsNullable(EventInfo)
  nameWithType: TypeExtensions.IsNullable(EventInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: IsNullable
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 130
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  summary: Determines whether the type of an event is nullable.
  remarks: Will be <code>false</code> for reference types if nullable reference types are not enabled.
  example: []
  syntax:
    content: public static bool IsNullable(this EventInfo eventInfo)
    parameters:
    - id: eventInfo
      type: System.Reflection.EventInfo
      description: The event.
    return:
      type: System.Boolean
      description: Whether the event type is nullable.
    content.vb: Public Shared Function IsNullable(eventInfo As EventInfo) As Boolean
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
  id: IsNullable(System.Reflection.ParameterInfo)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: IsNullable(ParameterInfo)
  nameWithType: TypeExtensions.IsNullable(ParameterInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: IsNullable
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 146
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  summary: Determines whether the type of a parameter is nullable.
  remarks: Will be <code>false</code> for reference types if nullable reference types are not enabled.
  example: []
  syntax:
    content: public static bool IsNullable(this ParameterInfo parameterInfo)
    parameters:
    - id: parameterInfo
      type: System.Reflection.ParameterInfo
      description: The parameter.
    return:
      type: System.Boolean
      description: Whether the parameter type is nullable.
    content.vb: Public Shared Function IsNullable(parameterInfo As ParameterInfo) As Boolean
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
  id: IsNullable(System.Reflection.FieldInfo)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: IsNullable(FieldInfo)
  nameWithType: TypeExtensions.IsNullable(FieldInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: IsNullable
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 162
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  summary: Determines whether the type of a field is nullable.
  remarks: Will be <code>false</code> for reference types if nullable reference types are not enabled.
  example: []
  syntax:
    content: public static bool IsNullable(this FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: System.Reflection.FieldInfo
      description: The field.
    return:
      type: System.Boolean
      description: Whether the field type is nullable.
    content.vb: Public Shared Function IsNullable(fieldInfo As FieldInfo) As Boolean
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable*
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
  id: IsNullable(System.Reflection.PropertyInfo)
  isExtensionMethod: true
  parent: osu.Framework.Extensions.TypeExtensions.TypeExtensions
  langs:
  - csharp
  - vb
  name: IsNullable(PropertyInfo)
  nameWithType: TypeExtensions.IsNullable(PropertyInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
  type: Method
  source:
    remote:
      path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: IsNullable
    path: osu.Framework/Extensions/TypeExtensions/TypeExtensions.cs
    startLine: 178
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Extensions.TypeExtensions
  summary: Determines whether the type of a property is nullable.
  remarks: Will be <code>false</code> for reference types if nullable reference types are not enabled.
  example: []
  syntax:
    content: public static bool IsNullable(this PropertyInfo propertyInfo)
    parameters:
    - id: propertyInfo
      type: System.Reflection.PropertyInfo
      description: The property.
    return:
      type: System.Boolean
      description: Whether the property type is nullable.
    content.vb: Public Shared Function IsNullable(propertyInfo As PropertyInfo) As Boolean
  overload: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable*
references:
- uid: osu.Framework.Extensions.TypeExtensions
  commentId: N:osu.Framework.Extensions.TypeExtensions
  href: osu.html
  name: osu.Framework.Extensions.TypeExtensions
  nameWithType: osu.Framework.Extensions.TypeExtensions
  fullName: osu.Framework.Extensions.TypeExtensions
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Extensions
    name: Extensions
    href: osu.Framework.Extensions.html
  - name: .
  - uid: osu.Framework.Extensions.TypeExtensions
    name: TypeExtensions
    href: osu.Framework.Extensions.TypeExtensions.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Extensions
    name: Extensions
    href: osu.Framework.Extensions.html
  - name: .
  - uid: osu.Framework.Extensions.TypeExtensions
    name: TypeExtensions
    href: osu.Framework.Extensions.TypeExtensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes*
  commentId: Overload:osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_EnumerateBaseTypes_System_Type_
  name: EnumerateBaseTypes
  nameWithType: TypeExtensions.EnumerateBaseTypes
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.EnumerateBaseTypes
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.ReadableName*
  commentId: Overload:osu.Framework.Extensions.TypeExtensions.TypeExtensions.ReadableName
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_ReadableName_System_Type_
  name: ReadableName
  nameWithType: TypeExtensions.ReadableName
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.ReadableName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier*
  commentId: Overload:osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_GetAccessModifier_System_Reflection_FieldInfo_
  name: GetAccessModifier
  nameWithType: TypeExtensions.GetAccessModifier
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetAccessModifier
- uid: System.Reflection.FieldInfo
  commentId: T:System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: osu.Framework.Extensions.TypeExtensions.AccessModifier
  commentId: T:osu.Framework.Extensions.TypeExtensions.AccessModifier
  parent: osu.Framework.Extensions.TypeExtensions
  href: osu.Framework.Extensions.TypeExtensions.AccessModifier.html
  name: AccessModifier
  nameWithType: AccessModifier
  fullName: osu.Framework.Extensions.TypeExtensions.AccessModifier
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: System.Reflection.MethodInfo
  commentId: T:System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
  isExternal: true
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_EventInfo_
  name: IsNullable(EventInfo)
  nameWithType: TypeExtensions.IsNullable(EventInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
  spec.csharp:
  - uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
    name: IsNullable
    href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_EventInfo_
  - name: (
  - uid: System.Reflection.EventInfo
    name: EventInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.eventinfo
  - name: )
  spec.vb:
  - uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.EventInfo)
    name: IsNullable
    href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_EventInfo_
  - name: (
  - uid: System.Reflection.EventInfo
    name: EventInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.eventinfo
  - name: )
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
  isExternal: true
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_PropertyInfo_
  name: IsNullable(PropertyInfo)
  nameWithType: TypeExtensions.IsNullable(PropertyInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
  spec.csharp:
  - uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
    name: IsNullable
    href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_PropertyInfo_
  - name: (
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
  spec.vb:
  - uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.PropertyInfo)
    name: IsNullable
    href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_PropertyInfo_
  - name: (
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
  isExternal: true
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_FieldInfo_
  name: IsNullable(FieldInfo)
  nameWithType: TypeExtensions.IsNullable(FieldInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
  spec.csharp:
  - uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
    name: IsNullable
    href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_FieldInfo_
  - name: (
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  spec.vb:
  - uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.FieldInfo)
    name: IsNullable
    href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_FieldInfo_
  - name: (
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
  commentId: M:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
  isExternal: true
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_ParameterInfo_
  name: IsNullable(ParameterInfo)
  nameWithType: TypeExtensions.IsNullable(ParameterInfo)
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
  spec.csharp:
  - uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
    name: IsNullable
    href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_ParameterInfo_
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.parameterinfo
  - name: )
  spec.vb:
  - uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable(System.Reflection.ParameterInfo)
    name: IsNullable
    href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Reflection_ParameterInfo_
  - name: (
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.parameterinfo
  - name: )
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable*
  commentId: Overload:osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_IsNullable_System_Type_
  name: IsNullable
  nameWithType: TypeExtensions.IsNullable
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.IsNullable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType*
  commentId: Overload:osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType
  href: osu.Framework.Extensions.TypeExtensions.TypeExtensions.html#osu_Framework_Extensions_TypeExtensions_TypeExtensions_GetUnderlyingNullableType_System_Type_
  name: GetUnderlyingNullableType
  nameWithType: TypeExtensions.GetUnderlyingNullableType
  fullName: osu.Framework.Extensions.TypeExtensions.TypeExtensions.GetUnderlyingNullableType
- uid: System.Reflection.EventInfo
  commentId: T:System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.eventinfo
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Reflection.ParameterInfo
  commentId: T:System.Reflection.ParameterInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.parameterinfo
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
