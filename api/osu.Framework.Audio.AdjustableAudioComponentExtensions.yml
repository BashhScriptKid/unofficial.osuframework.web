### YamlMime:ManagedReference
items:
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions
  commentId: T:osu.Framework.Audio.AdjustableAudioComponentExtensions
  id: AdjustableAudioComponentExtensions
  parent: osu.Framework.Audio
  children:
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``2(``0,System.Double,System.Double,``1)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``2(``0,System.Double,System.Double,``1)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``2(``0,System.Double,System.Double,``1)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``2(``0,System.Double,System.Double,``1)
  - osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  langs:
  - csharp
  - vb
  name: AdjustableAudioComponentExtensions
  nameWithType: AdjustableAudioComponentExtensions
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions
  type: Class
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: AdjustableAudioComponentExtensions
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 65
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  syntax:
    content: public static class AdjustableAudioComponentExtensions
    content.vb: Public Module AdjustableAudioComponentExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  id: VolumeTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: VolumeTo<T>(T, double, double, Easing)
  nameWithType: AdjustableAudioComponentExtensions.VolumeTo<T>(T, double, double, Easing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo<T>(T, double, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: VolumeTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 73
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Audio.DrawableAudioWrapper.Volume" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> VolumeTo<T>(this T component, double newVolume, double duration = 0, Easing easing = Easing.None) where T : class, IAdjustableAudioComponent, IDrawable'
    parameters:
    - id: component
      type: '{T}'
    - id: newVolume
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function VolumeTo(Of T As {Class, IAdjustableAudioComponent, IDrawable})(component As T, newVolume As Double, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.VolumeTo(Of T)(T, Double, Double, Easing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo(Of T)(T, Double, Double, osu.Framework.Graphics.Easing)
  name.vb: VolumeTo(Of T)(T, Double, Double, Easing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  id: BalanceTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: BalanceTo<T>(T, double, double, Easing)
  nameWithType: AdjustableAudioComponentExtensions.BalanceTo<T>(T, double, double, Easing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo<T>(T, double, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: BalanceTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 81
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Balance" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> BalanceTo<T>(this T component, double newBalance, double duration = 0, Easing easing = Easing.None) where T : class, IAdjustableAudioComponent, IDrawable'
    parameters:
    - id: component
      type: '{T}'
    - id: newBalance
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function BalanceTo(Of T As {Class, IAdjustableAudioComponent, IDrawable})(component As T, newBalance As Double, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.BalanceTo(Of T)(T, Double, Double, Easing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo(Of T)(T, Double, Double, osu.Framework.Graphics.Easing)
  name.vb: BalanceTo(Of T)(T, Double, Double, Easing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  id: FrequencyTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: FrequencyTo<T>(T, double, double, Easing)
  nameWithType: AdjustableAudioComponentExtensions.FrequencyTo<T>(T, double, double, Easing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo<T>(T, double, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FrequencyTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 89
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Frequency" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FrequencyTo<T>(this T component, double newFrequency, double duration = 0, Easing easing = Easing.None) where T : class, IAdjustableAudioComponent, IDrawable'
    parameters:
    - id: component
      type: '{T}'
    - id: newFrequency
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FrequencyTo(Of T As {Class, IAdjustableAudioComponent, IDrawable})(component As T, newFrequency As Double, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.FrequencyTo(Of T)(T, Double, Double, Easing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo(Of T)(T, Double, Double, osu.Framework.Graphics.Easing)
  name.vb: FrequencyTo(Of T)(T, Double, Double, Easing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  id: TempoTo``1(``0,System.Double,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: TempoTo<T>(T, double, double, Easing)
  nameWithType: AdjustableAudioComponentExtensions.TempoTo<T>(T, double, double, Easing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo<T>(T, double, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TempoTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 97
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Tempo" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TempoTo<T>(this T component, double newTempo, double duration = 0, Easing easing = Easing.None) where T : class, IAdjustableAudioComponent, IDrawable'
    parameters:
    - id: component
      type: '{T}'
    - id: newTempo
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TempoTo(Of T As {Class, IAdjustableAudioComponent, IDrawable})(component As T, newTempo As Double, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.TempoTo(Of T)(T, Double, Double, Easing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo(Of T)(T, Double, Double, osu.Framework.Graphics.Easing)
  name.vb: TempoTo(Of T)(T, Double, Double, Easing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  id: VolumeTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: VolumeTo<T>(TransformSequence<T>, double, double, Easing)
  nameWithType: AdjustableAudioComponentExtensions.VolumeTo<T>(TransformSequence<T>, double, double, Easing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo<T>(osu.Framework.Graphics.Transforms.TransformSequence<T>, double, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: VolumeTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 105
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Volume" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> VolumeTo<T>(this TransformSequence<T> sequence, double newVolume, double duration = 0, Easing easing = Easing.None) where T : class, IAdjustableAudioComponent, IDrawable'
    parameters:
    - id: sequence
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
    - id: newVolume
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function VolumeTo(Of T As {Class, IAdjustableAudioComponent, IDrawable})(sequence As TransformSequence(Of T), newVolume As Double, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.VolumeTo(Of T)(TransformSequence(Of T), Double, Double, Easing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo(Of T)(osu.Framework.Graphics.Transforms.TransformSequence(Of T), Double, Double, osu.Framework.Graphics.Easing)
  name.vb: VolumeTo(Of T)(TransformSequence(Of T), Double, Double, Easing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  id: BalanceTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: BalanceTo<T>(TransformSequence<T>, double, double, Easing)
  nameWithType: AdjustableAudioComponentExtensions.BalanceTo<T>(TransformSequence<T>, double, double, Easing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo<T>(osu.Framework.Graphics.Transforms.TransformSequence<T>, double, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: BalanceTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 113
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Balance" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> BalanceTo<T>(this TransformSequence<T> sequence, double newBalance, double duration = 0, Easing easing = Easing.None) where T : class, IAdjustableAudioComponent, IDrawable'
    parameters:
    - id: sequence
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
    - id: newBalance
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function BalanceTo(Of T As {Class, IAdjustableAudioComponent, IDrawable})(sequence As TransformSequence(Of T), newBalance As Double, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.BalanceTo(Of T)(TransformSequence(Of T), Double, Double, Easing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo(Of T)(osu.Framework.Graphics.Transforms.TransformSequence(Of T), Double, Double, osu.Framework.Graphics.Easing)
  name.vb: BalanceTo(Of T)(TransformSequence(Of T), Double, Double, Easing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  id: FrequencyTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: FrequencyTo<T>(TransformSequence<T>, double, double, Easing)
  nameWithType: AdjustableAudioComponentExtensions.FrequencyTo<T>(TransformSequence<T>, double, double, Easing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo<T>(osu.Framework.Graphics.Transforms.TransformSequence<T>, double, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FrequencyTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 121
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Frequency" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FrequencyTo<T>(this TransformSequence<T> sequence, double newFrequency, double duration = 0, Easing easing = Easing.None) where T : class, IAdjustableAudioComponent, IDrawable'
    parameters:
    - id: sequence
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
    - id: newFrequency
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FrequencyTo(Of T As {Class, IAdjustableAudioComponent, IDrawable})(sequence As TransformSequence(Of T), newFrequency As Double, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.FrequencyTo(Of T)(TransformSequence(Of T), Double, Double, Easing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo(Of T)(osu.Framework.Graphics.Transforms.TransformSequence(Of T), Double, Double, osu.Framework.Graphics.Easing)
  name.vb: FrequencyTo(Of T)(TransformSequence(Of T), Double, Double, Easing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  id: TempoTo``1(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: TempoTo<T>(TransformSequence<T>, double, double, Easing)
  nameWithType: AdjustableAudioComponentExtensions.TempoTo<T>(TransformSequence<T>, double, double, Easing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo<T>(osu.Framework.Graphics.Transforms.TransformSequence<T>, double, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TempoTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 129
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Tempo" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TempoTo<T>(this TransformSequence<T> sequence, double newTempo, double duration = 0, Easing easing = Easing.None) where T : class, IAdjustableAudioComponent, IDrawable'
    parameters:
    - id: sequence
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
    - id: newTempo
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TempoTo(Of T As {Class, IAdjustableAudioComponent, IDrawable})(sequence As TransformSequence(Of T), newTempo As Double, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.TempoTo(Of T)(TransformSequence(Of T), Double, Double, Easing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo(Of T)(osu.Framework.Graphics.Transforms.TransformSequence(Of T), Double, Double, osu.Framework.Graphics.Easing)
  name.vb: TempoTo(Of T)(TransformSequence(Of T), Double, Double, Easing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``2(``0,System.Double,System.Double,``1)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``2(``0,System.Double,System.Double,``1)
  id: VolumeTo``2(``0,System.Double,System.Double,``1)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: VolumeTo<T, TEasing>(T, double, double, TEasing)
  nameWithType: AdjustableAudioComponentExtensions.VolumeTo<T, TEasing>(T, double, double, TEasing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo<T, TEasing>(T, double, double, TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: VolumeTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 141
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Volume" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> VolumeTo<T, TEasing>(this T component, double newVolume, double duration, TEasing easing) where T : class, IAdjustableAudioComponent, IDrawable where TEasing : IEasingFunction'
    parameters:
    - id: component
      type: '{T}'
    - id: newVolume
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function VolumeTo(Of T As {Class, IAdjustableAudioComponent, IDrawable}, TEasing As IEasingFunction)(component As T, newVolume As Double, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.VolumeTo(Of T, TEasing)(T, Double, Double, TEasing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo(Of T, TEasing)(T, Double, Double, TEasing)
  name.vb: VolumeTo(Of T, TEasing)(T, Double, Double, TEasing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``2(``0,System.Double,System.Double,``1)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``2(``0,System.Double,System.Double,``1)
  id: BalanceTo``2(``0,System.Double,System.Double,``1)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: BalanceTo<T, TEasing>(T, double, double, TEasing)
  nameWithType: AdjustableAudioComponentExtensions.BalanceTo<T, TEasing>(T, double, double, TEasing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo<T, TEasing>(T, double, double, TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: BalanceTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 150
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Balance" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> BalanceTo<T, TEasing>(this T component, double newBalance, double duration, TEasing easing) where T : class, IAdjustableAudioComponent, IDrawable where TEasing : IEasingFunction'
    parameters:
    - id: component
      type: '{T}'
    - id: newBalance
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function BalanceTo(Of T As {Class, IAdjustableAudioComponent, IDrawable}, TEasing As IEasingFunction)(component As T, newBalance As Double, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.BalanceTo(Of T, TEasing)(T, Double, Double, TEasing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo(Of T, TEasing)(T, Double, Double, TEasing)
  name.vb: BalanceTo(Of T, TEasing)(T, Double, Double, TEasing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``2(``0,System.Double,System.Double,``1)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``2(``0,System.Double,System.Double,``1)
  id: FrequencyTo``2(``0,System.Double,System.Double,``1)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: FrequencyTo<T, TEasing>(T, double, double, TEasing)
  nameWithType: AdjustableAudioComponentExtensions.FrequencyTo<T, TEasing>(T, double, double, TEasing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo<T, TEasing>(T, double, double, TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FrequencyTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 159
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Frequency" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FrequencyTo<T, TEasing>(this T component, double newFrequency, double duration, TEasing easing) where T : class, IAdjustableAudioComponent, IDrawable where TEasing : IEasingFunction'
    parameters:
    - id: component
      type: '{T}'
    - id: newFrequency
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FrequencyTo(Of T As {Class, IAdjustableAudioComponent, IDrawable}, TEasing As IEasingFunction)(component As T, newFrequency As Double, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.FrequencyTo(Of T, TEasing)(T, Double, Double, TEasing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo(Of T, TEasing)(T, Double, Double, TEasing)
  name.vb: FrequencyTo(Of T, TEasing)(T, Double, Double, TEasing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``2(``0,System.Double,System.Double,``1)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``2(``0,System.Double,System.Double,``1)
  id: TempoTo``2(``0,System.Double,System.Double,``1)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: TempoTo<T, TEasing>(T, double, double, TEasing)
  nameWithType: AdjustableAudioComponentExtensions.TempoTo<T, TEasing>(T, double, double, TEasing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo<T, TEasing>(T, double, double, TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TempoTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 168
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Tempo" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TempoTo<T, TEasing>(this T component, double newTempo, double duration, TEasing easing) where T : class, IAdjustableAudioComponent, IDrawable where TEasing : IEasingFunction'
    parameters:
    - id: component
      type: '{T}'
    - id: newTempo
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TempoTo(Of T As {Class, IAdjustableAudioComponent, IDrawable}, TEasing As IEasingFunction)(component As T, newTempo As Double, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.TempoTo(Of T, TEasing)(T, Double, Double, TEasing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo(Of T, TEasing)(T, Double, Double, TEasing)
  name.vb: TempoTo(Of T, TEasing)(T, Double, Double, TEasing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  id: VolumeTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: VolumeTo<T, TEasing>(TransformSequence<T>, double, double, TEasing)
  nameWithType: AdjustableAudioComponentExtensions.VolumeTo<T, TEasing>(TransformSequence<T>, double, double, TEasing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo<T, TEasing>(osu.Framework.Graphics.Transforms.TransformSequence<T>, double, double, TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: VolumeTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 177
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Volume" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> VolumeTo<T, TEasing>(this TransformSequence<T> sequence, double newVolume, double duration, TEasing easing) where T : class, IAdjustableAudioComponent, IDrawable where TEasing : IEasingFunction'
    parameters:
    - id: sequence
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
    - id: newVolume
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function VolumeTo(Of T As {Class, IAdjustableAudioComponent, IDrawable}, TEasing As IEasingFunction)(sequence As TransformSequence(Of T), newVolume As Double, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.VolumeTo(Of T, TEasing)(TransformSequence(Of T), Double, Double, TEasing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo(Of T, TEasing)(osu.Framework.Graphics.Transforms.TransformSequence(Of T), Double, Double, TEasing)
  name.vb: VolumeTo(Of T, TEasing)(TransformSequence(Of T), Double, Double, TEasing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  id: BalanceTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: BalanceTo<T, TEasing>(TransformSequence<T>, double, double, TEasing)
  nameWithType: AdjustableAudioComponentExtensions.BalanceTo<T, TEasing>(TransformSequence<T>, double, double, TEasing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo<T, TEasing>(osu.Framework.Graphics.Transforms.TransformSequence<T>, double, double, TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: BalanceTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 186
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Balance" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> BalanceTo<T, TEasing>(this TransformSequence<T> sequence, double newBalance, double duration, TEasing easing) where T : class, IAdjustableAudioComponent, IDrawable where TEasing : IEasingFunction'
    parameters:
    - id: sequence
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
    - id: newBalance
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function BalanceTo(Of T As {Class, IAdjustableAudioComponent, IDrawable}, TEasing As IEasingFunction)(sequence As TransformSequence(Of T), newBalance As Double, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.BalanceTo(Of T, TEasing)(TransformSequence(Of T), Double, Double, TEasing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo(Of T, TEasing)(osu.Framework.Graphics.Transforms.TransformSequence(Of T), Double, Double, TEasing)
  name.vb: BalanceTo(Of T, TEasing)(TransformSequence(Of T), Double, Double, TEasing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  id: FrequencyTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: FrequencyTo<T, TEasing>(TransformSequence<T>, double, double, TEasing)
  nameWithType: AdjustableAudioComponentExtensions.FrequencyTo<T, TEasing>(TransformSequence<T>, double, double, TEasing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo<T, TEasing>(osu.Framework.Graphics.Transforms.TransformSequence<T>, double, double, TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FrequencyTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 195
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Frequency" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FrequencyTo<T, TEasing>(this TransformSequence<T> sequence, double newFrequency, double duration, TEasing easing) where T : class, IAdjustableAudioComponent, IDrawable where TEasing : IEasingFunction'
    parameters:
    - id: sequence
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
    - id: newFrequency
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FrequencyTo(Of T As {Class, IAdjustableAudioComponent, IDrawable}, TEasing As IEasingFunction)(sequence As TransformSequence(Of T), newFrequency As Double, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.FrequencyTo(Of T, TEasing)(TransformSequence(Of T), Double, Double, TEasing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo(Of T, TEasing)(osu.Framework.Graphics.Transforms.TransformSequence(Of T), Double, Double, TEasing)
  name.vb: FrequencyTo(Of T, TEasing)(TransformSequence(Of T), Double, Double, TEasing)
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  commentId: M:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  id: TempoTo``2(osu.Framework.Graphics.Transforms.TransformSequence{``0},System.Double,System.Double,``1)
  isExtensionMethod: true
  parent: osu.Framework.Audio.AdjustableAudioComponentExtensions
  langs:
  - csharp
  - vb
  name: TempoTo<T, TEasing>(TransformSequence<T>, double, double, TEasing)
  nameWithType: AdjustableAudioComponentExtensions.TempoTo<T, TEasing>(TransformSequence<T>, double, double, TEasing)
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo<T, TEasing>(osu.Framework.Graphics.Transforms.TransformSequence<T>, double, double, TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Audio/IAdjustableAudioComponent.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TempoTo
    path: osu.Framework/Audio/IAdjustableAudioComponent.cs
    startLine: 204
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Audio
  summary: Smoothly adjusts <xref href="osu.Framework.Audio.IAdjustableAudioComponent.Tempo" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TempoTo<T, TEasing>(this TransformSequence<T> sequence, double newTempo, double duration, TEasing easing) where T : class, IAdjustableAudioComponent, IDrawable where TEasing : IEasingFunction'
    parameters:
    - id: sequence
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
    - id: newTempo
      type: System.Double
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TempoTo(Of T As {Class, IAdjustableAudioComponent, IDrawable}, TEasing As IEasingFunction)(sequence As TransformSequence(Of T), newTempo As Double, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo*
  nameWithType.vb: AdjustableAudioComponentExtensions.TempoTo(Of T, TEasing)(TransformSequence(Of T), Double, Double, TEasing)
  fullName.vb: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo(Of T, TEasing)(osu.Framework.Graphics.Transforms.TransformSequence(Of T), Double, Double, TEasing)
  name.vb: TempoTo(Of T, TEasing)(TransformSequence(Of T), Double, Double, TEasing)
references:
- uid: osu.Framework.Audio
  commentId: N:osu.Framework.Audio
  href: osu.html
  name: osu.Framework.Audio
  nameWithType: osu.Framework.Audio
  fullName: osu.Framework.Audio
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Audio
    name: Audio
    href: osu.Framework.Audio.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Audio
    name: Audio
    href: osu.Framework.Audio.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: osu.Framework.Graphics.Audio.DrawableAudioWrapper.Volume
  commentId: P:osu.Framework.Graphics.Audio.DrawableAudioWrapper.Volume
  parent: osu.Framework.Graphics.Audio.DrawableAudioWrapper
  href: osu.Framework.Graphics.Audio.DrawableAudioWrapper.html#osu_Framework_Graphics_Audio_DrawableAudioWrapper_Volume
  name: Volume
  nameWithType: DrawableAudioWrapper.Volume
  fullName: osu.Framework.Graphics.Audio.DrawableAudioWrapper.Volume
- uid: osu.Framework.Graphics.Transforms.TransformSequence`1
  commentId: T:osu.Framework.Graphics.Transforms.TransformSequence`1
  parent: osu.Framework.Graphics.Transforms
  href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  name: TransformSequence<T>
  nameWithType: TransformSequence<T>
  fullName: osu.Framework.Graphics.Transforms.TransformSequence<T>
  nameWithType.vb: TransformSequence(Of T)
  fullName.vb: osu.Framework.Graphics.Transforms.TransformSequence(Of T)
  name.vb: TransformSequence(Of T)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo*
  commentId: Overload:osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo
  href: osu.Framework.Audio.AdjustableAudioComponentExtensions.html#osu_Framework_Audio_AdjustableAudioComponentExtensions_VolumeTo__1___0_System_Double_System_Double_osu_Framework_Graphics_Easing_
  name: VolumeTo
  nameWithType: AdjustableAudioComponentExtensions.VolumeTo
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.VolumeTo
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: osu.Framework.Graphics.Easing
  commentId: T:osu.Framework.Graphics.Easing
  parent: osu.Framework.Graphics
  href: osu.Framework.Graphics.Easing.html
  name: Easing
  nameWithType: Easing
  fullName: osu.Framework.Graphics.Easing
- uid: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
  commentId: T:osu.Framework.Graphics.Transforms.TransformSequence{``0}
  parent: osu.Framework.Graphics.Transforms
  definition: osu.Framework.Graphics.Transforms.TransformSequence`1
  href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  name: TransformSequence<T>
  nameWithType: TransformSequence<T>
  fullName: osu.Framework.Graphics.Transforms.TransformSequence<T>
  nameWithType.vb: TransformSequence(Of T)
  fullName.vb: osu.Framework.Graphics.Transforms.TransformSequence(Of T)
  name.vb: TransformSequence(Of T)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: osu.Framework.Graphics.Audio.DrawableAudioWrapper
  commentId: T:osu.Framework.Graphics.Audio.DrawableAudioWrapper
  parent: osu.Framework.Graphics.Audio
  href: osu.Framework.Graphics.Audio.DrawableAudioWrapper.html
  name: DrawableAudioWrapper
  nameWithType: DrawableAudioWrapper
  fullName: osu.Framework.Graphics.Audio.DrawableAudioWrapper
- uid: osu.Framework.Graphics.Transforms
  commentId: N:osu.Framework.Graphics.Transforms
  href: osu.html
  name: osu.Framework.Graphics.Transforms
  nameWithType: osu.Framework.Graphics.Transforms
  fullName: osu.Framework.Graphics.Transforms
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Transforms
    name: Transforms
    href: osu.Framework.Graphics.Transforms.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Transforms
    name: Transforms
    href: osu.Framework.Graphics.Transforms.html
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: osu.Framework.Graphics
  commentId: N:osu.Framework.Graphics
  href: osu.html
  name: osu.Framework.Graphics
  nameWithType: osu.Framework.Graphics
  fullName: osu.Framework.Graphics
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
- uid: osu.Framework.Graphics.Audio
  commentId: N:osu.Framework.Graphics.Audio
  href: osu.html
  name: osu.Framework.Graphics.Audio
  nameWithType: osu.Framework.Graphics.Audio
  fullName: osu.Framework.Graphics.Audio
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Audio
    name: Audio
    href: osu.Framework.Graphics.Audio.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Audio
    name: Audio
    href: osu.Framework.Graphics.Audio.html
- uid: osu.Framework.Audio.IAdjustableAudioComponent.Balance
  commentId: P:osu.Framework.Audio.IAdjustableAudioComponent.Balance
  parent: osu.Framework.Audio.IAdjustableAudioComponent
  href: osu.Framework.Audio.IAdjustableAudioComponent.html#osu_Framework_Audio_IAdjustableAudioComponent_Balance
  name: Balance
  nameWithType: IAdjustableAudioComponent.Balance
  fullName: osu.Framework.Audio.IAdjustableAudioComponent.Balance
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo*
  commentId: Overload:osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo
  href: osu.Framework.Audio.AdjustableAudioComponentExtensions.html#osu_Framework_Audio_AdjustableAudioComponentExtensions_BalanceTo__1___0_System_Double_System_Double_osu_Framework_Graphics_Easing_
  name: BalanceTo
  nameWithType: AdjustableAudioComponentExtensions.BalanceTo
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.BalanceTo
- uid: osu.Framework.Audio.IAdjustableAudioComponent
  commentId: T:osu.Framework.Audio.IAdjustableAudioComponent
  parent: osu.Framework.Audio
  href: osu.Framework.Audio.IAdjustableAudioComponent.html
  name: IAdjustableAudioComponent
  nameWithType: IAdjustableAudioComponent
  fullName: osu.Framework.Audio.IAdjustableAudioComponent
- uid: osu.Framework.Audio.IAdjustableAudioComponent.Frequency
  commentId: P:osu.Framework.Audio.IAdjustableAudioComponent.Frequency
  parent: osu.Framework.Audio.IAdjustableAudioComponent
  href: osu.Framework.Audio.IAdjustableAudioComponent.html#osu_Framework_Audio_IAdjustableAudioComponent_Frequency
  name: Frequency
  nameWithType: IAdjustableAudioComponent.Frequency
  fullName: osu.Framework.Audio.IAdjustableAudioComponent.Frequency
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo*
  commentId: Overload:osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo
  href: osu.Framework.Audio.AdjustableAudioComponentExtensions.html#osu_Framework_Audio_AdjustableAudioComponentExtensions_FrequencyTo__1___0_System_Double_System_Double_osu_Framework_Graphics_Easing_
  name: FrequencyTo
  nameWithType: AdjustableAudioComponentExtensions.FrequencyTo
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.FrequencyTo
- uid: osu.Framework.Audio.IAdjustableAudioComponent.Tempo
  commentId: P:osu.Framework.Audio.IAdjustableAudioComponent.Tempo
  parent: osu.Framework.Audio.IAdjustableAudioComponent
  href: osu.Framework.Audio.IAdjustableAudioComponent.html#osu_Framework_Audio_IAdjustableAudioComponent_Tempo
  name: Tempo
  nameWithType: IAdjustableAudioComponent.Tempo
  fullName: osu.Framework.Audio.IAdjustableAudioComponent.Tempo
- uid: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo*
  commentId: Overload:osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo
  href: osu.Framework.Audio.AdjustableAudioComponentExtensions.html#osu_Framework_Audio_AdjustableAudioComponentExtensions_TempoTo__1___0_System_Double_System_Double_osu_Framework_Graphics_Easing_
  name: TempoTo
  nameWithType: AdjustableAudioComponentExtensions.TempoTo
  fullName: osu.Framework.Audio.AdjustableAudioComponentExtensions.TempoTo
- uid: osu.Framework.Audio.IAdjustableAudioComponent.Volume
  commentId: P:osu.Framework.Audio.IAdjustableAudioComponent.Volume
  parent: osu.Framework.Audio.IAdjustableAudioComponent
  href: osu.Framework.Audio.IAdjustableAudioComponent.html#osu_Framework_Audio_IAdjustableAudioComponent_Volume
  name: Volume
  nameWithType: IAdjustableAudioComponent.Volume
  fullName: osu.Framework.Audio.IAdjustableAudioComponent.Volume
- uid: '{TEasing}'
  commentId: '!:TEasing'
  definition: TEasing
  name: TEasing
  nameWithType: TEasing
  fullName: TEasing
- uid: TEasing
  name: TEasing
  nameWithType: TEasing
  fullName: TEasing
