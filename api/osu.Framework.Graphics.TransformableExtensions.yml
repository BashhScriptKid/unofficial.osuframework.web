### YamlMime:ManagedReference
items:
- uid: osu.Framework.Graphics.TransformableExtensions
  commentId: T:osu.Framework.Graphics.TransformableExtensions
  id: TransformableExtensions
  parent: osu.Framework.Graphics
  children:
  - osu.Framework.Graphics.TransformableExtensions.Animate``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  - osu.Framework.Graphics.TransformableExtensions.BlurTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.BlurTo``2(``0,osuTK.Vector2,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished``1(``0)
  - osu.Framework.Graphics.TransformableExtensions.Delay``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  - osu.Framework.Graphics.TransformableExtensions.FadeColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FadeColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``1(``0,osuTK.Graphics.Color4,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``2(``0,osuTK.Graphics.Color4,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.FadeInFromZero``1(``0,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FadeInFromZero``2(``0,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.FadeIn``1(``0,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FadeIn``2(``0,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne``1(``0,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne``2(``0,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.FadeOut``1(``0,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FadeOut``2(``0,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.FadeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FadeTo``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.FlashColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.FlashColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double)
  - osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double,System.Int32,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  - osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  - osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  - osu.Framework.Graphics.TransformableExtensions.MakeTransform``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing,System.String)
  - osu.Framework.Graphics.TransformableExtensions.MakeTransform``3(``0,System.String,``2,System.Double,``1@,System.String)
  - osu.Framework.Graphics.TransformableExtensions.MoveToOffset``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.MoveToOffset``2(``0,osuTK.Vector2,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.MoveToX``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.MoveToX``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.MoveToY``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.MoveToY``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.MoveTo``1(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.MoveTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.MoveTo``2(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.MoveTo``2(``0,osuTK.Vector2,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.PopulateTransform``2(``1,osu.Framework.Graphics.Transforms.Transform{``0,osu.Framework.Graphics.Transforms.DefaultEasingFunction,``1},``0,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.ResizeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.ResizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.ResizeTo``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.ResizeTo``2(``0,osuTK.Vector2,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.RotateTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.RotateTo``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.ScaleTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.ScaleTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.ScaleTo``2(``0,System.Single,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.ScaleTo``2(``0,osuTK.Vector2,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single)
  - osu.Framework.Graphics.TransformableExtensions.Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single,System.Int32)
  - osu.Framework.Graphics.TransformableExtensions.TransformBindableTo``2(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.TransformBindableTo``3(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,``2@)
  - osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo``2(``0,osuTK.Vector2,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo``2(``0,osuTK.Vector2,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo``2(``0,osuTK.Vector2,System.Double,``1@)
  - osu.Framework.Graphics.TransformableExtensions.TransformTo``1(``0,osu.Framework.Graphics.Transforms.Transform)
  - osu.Framework.Graphics.TransformableExtensions.TransformTo``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.TransformTo``3(``0,System.String,``1,System.Double,``2@,System.String)
  - osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo``1(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,osu.Framework.Graphics.Easing)
  - osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo``2(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,``1@)
  langs:
  - csharp
  - vb
  name: TransformableExtensions
  nameWithType: TransformableExtensions
  fullName: osu.Framework.Graphics.TransformableExtensions
  type: Class
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformableExtensions
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 19
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  syntax:
    content: public static class TransformableExtensions
    content.vb: Public Module TransformableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: osu.Framework.Graphics.TransformableExtensions.TransformTo``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformTo``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing)
  id: TransformTo``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformTo<TThis, TValue>(TThis, string, TValue, double, Easing)
  nameWithType: TransformableExtensions.TransformTo<TThis, TValue>(TThis, string, TValue, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformTo<TThis, TValue>(TThis, string, TValue, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 33
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Transforms a given property or field member of a given <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref><code class="typeparamref">TThis</code> to <code class="paramref">newValue</code>.

    The value of the given member is smoothly changed over time using the given <code class="paramref">easing</code> for tweening.
  example: []
  syntax:
    content: 'public static TransformSequence<TThis> TransformTo<TThis, TValue>(this TThis t, string propertyOrFieldName, TValue newValue, double duration = 0, Easing easing = Easing.None) where TThis : class, ITransformable'
    parameters:
    - id: t
      type: '{TThis}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> to apply the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> to.
    - id: propertyOrFieldName
      type: System.String
      description: The property or field name of the member ot <code class="typeparamref">TThis</code> to transform.
    - id: newValue
      type: '{TValue}'
      description: The value to transform to.
    - id: duration
      type: System.Double
      description: The transform duration.
    - id: easing
      type: osu.Framework.Graphics.Easing
      description: The transform easing to be used for tweening.
    typeParameters:
    - id: TThis
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> to apply the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> to.
    - id: TValue
      description: The value type which is being transformed.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{TThis}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformTo(Of TThis As {Class, ITransformable}, TValue)(t As TThis, propertyOrFieldName As String, newValue As TValue, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of TThis)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformTo*
  nameWithType.vb: TransformableExtensions.TransformTo(Of TThis, TValue)(TThis, String, TValue, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformTo(Of TThis, TValue)(TThis, String, TValue, Double, osu.Framework.Graphics.Easing)
  name.vb: TransformTo(Of TThis, TValue)(TThis, String, TValue, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformTo``3(``0,System.String,``1,System.Double,``2@,System.String)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformTo``3(``0,System.String,``1,System.Double,``2@,System.String)
  id: TransformTo``3(``0,System.String,``1,System.Double,``2@,System.String)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformTo<TThis, TValue, TEasing>(TThis, string, TValue, double, in TEasing, string)
  nameWithType: TransformableExtensions.TransformTo<TThis, TValue, TEasing>(TThis, string, TValue, double, in TEasing, string)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformTo<TThis, TValue, TEasing>(TThis, string, TValue, double, in TEasing, string)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 51
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Transforms a given property or field member of a given <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref><code class="typeparamref">TThis</code> to <code class="paramref">newValue</code>.

    The value of the given member is smoothly changed over time using the given <code class="paramref">easing</code> for tweening.
  example: []
  syntax:
    content: 'public static TransformSequence<TThis> TransformTo<TThis, TValue, TEasing>(this TThis t, string propertyOrFieldName, TValue newValue, double duration, in TEasing easing, string grouping = null) where TThis : class, ITransformable where TEasing : IEasingFunction'
    parameters:
    - id: t
      type: '{TThis}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> to apply the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> to.
    - id: propertyOrFieldName
      type: System.String
      description: The property or field name of the member ot <code class="typeparamref">TThis</code> to transform.
    - id: newValue
      type: '{TValue}'
      description: The value to transform to.
    - id: duration
      type: System.Double
      description: The transform duration.
    - id: easing
      type: '{TEasing}'
      description: The transform easing to be used for tweening.
    - id: grouping
      type: System.String
      description: An optional grouping specification to be used when the same property may be touched by multiple transform types.
    typeParameters:
    - id: TThis
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> to apply the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> to.
    - id: TValue
      description: The value type which is being transformed.
    - id: TEasing
      description: The type of easing.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{TThis}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformTo(Of TThis As {Class, ITransformable}, TValue, TEasing As IEasingFunction)(t As TThis, propertyOrFieldName As String, newValue As TValue, duration As Double, easing As TEasing, grouping As String = Nothing) As TransformSequence(Of TThis)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformTo*
  nameWithType.vb: TransformableExtensions.TransformTo(Of TThis, TValue, TEasing)(TThis, String, TValue, Double, TEasing, String)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformTo(Of TThis, TValue, TEasing)(TThis, String, TValue, Double, TEasing, String)
  name.vb: TransformTo(Of TThis, TValue, TEasing)(TThis, String, TValue, Double, TEasing, String)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformTo``1(``0,osu.Framework.Graphics.Transforms.Transform)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformTo``1(``0,osu.Framework.Graphics.Transforms.Transform)
  id: TransformTo``1(``0,osu.Framework.Graphics.Transforms.Transform)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformTo<TThis>(TThis, Transform)
  nameWithType: TransformableExtensions.TransformTo<TThis>(TThis, Transform)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformTo<TThis>(TThis, osu.Framework.Graphics.Transforms.Transform)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 63
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Applies a <xref href="osu.Framework.Graphics.Transforms.Transform" data-throw-if-not-resolved="false"></xref> to a given <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public static TransformSequence<TThis> TransformTo<TThis>(this TThis t, Transform transform) where TThis : class, ITransformable'
    parameters:
    - id: t
      type: '{TThis}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> to apply the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> to.
    - id: transform
      type: osu.Framework.Graphics.Transforms.Transform
      description: The transform to use.
    typeParameters:
    - id: TThis
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> to apply the <xref href="osu.Framework.Graphics.Transforms.Transform" data-throw-if-not-resolved="false"></xref> to.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{TThis}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformTo(Of TThis As {Class, ITransformable})(t As TThis, transform As Transform) As TransformSequence(Of TThis)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformTo*
  nameWithType.vb: TransformableExtensions.TransformTo(Of TThis)(TThis, Transform)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformTo(Of TThis)(TThis, osu.Framework.Graphics.Transforms.Transform)
  name.vb: TransformTo(Of TThis)(TThis, Transform)
- uid: osu.Framework.Graphics.TransformableExtensions.MakeTransform``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing,System.String)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MakeTransform``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing,System.String)
  id: MakeTransform``2(``0,System.String,``1,System.Double,osu.Framework.Graphics.Easing,System.String)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MakeTransform<TThis, TValue>(TThis, string, TValue, double, Easing, string)
  nameWithType: TransformableExtensions.MakeTransform<TThis, TValue>(TThis, string, TValue, double, Easing, string)
  fullName: osu.Framework.Graphics.TransformableExtensions.MakeTransform<TThis, TValue>(TThis, string, TValue, double, osu.Framework.Graphics.Easing, string)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MakeTransform
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 85
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Creates a <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> for smoothly changing <code class="paramref">propertyOrFieldName</code>

    over time using the given <code class="paramref">easing</code> for tweening.

    <xref href="osu.Framework.Graphics.TransformableExtensions.PopulateTransform%60%603(%60%602%2cosu.Framework.Graphics.Transforms.Transform%7b%60%600%2c%60%601%2c%60%602%7d%2c%60%600%2cSystem.Double%2c%60%601%40)" data-throw-if-not-resolved="false"></xref> is invoked as part of this method.
  example: []
  syntax:
    content: 'public static Transform<TValue, DefaultEasingFunction, TThis> MakeTransform<TThis, TValue>(this TThis t, string propertyOrFieldName, TValue newValue, double duration = 0, Easing easing = Easing.None, string grouping = null) where TThis : class, ITransformable'
    parameters:
    - id: t
      type: '{TThis}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: propertyOrFieldName
      type: System.String
      description: The property or field name of the member ot <code class="typeparamref">TThis</code> to transform.
    - id: newValue
      type: '{TValue}'
      description: The value to transform to.
    - id: duration
      type: System.Double
      description: The transform duration.
    - id: easing
      type: osu.Framework.Graphics.Easing
      description: The transform easing to be used for tweening.
    - id: grouping
      type: System.String
      description: An optional grouping specification to be used when the same property may be touched by multiple transform types.
    typeParameters:
    - id: TThis
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    - id: TValue
      description: The value type which is being transformed.
    return:
      type: osu.Framework.Graphics.Transforms.Transform{{TValue},osu.Framework.Graphics.Transforms.DefaultEasingFunction,{TThis}}
      description: The resulting <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function MakeTransform(Of TThis As {Class, ITransformable}, TValue)(t As TThis, propertyOrFieldName As String, newValue As TValue, duration As Double = 0, easing As Easing = Easing.None, grouping As String = Nothing) As Transform(Of TValue, DefaultEasingFunction, TThis)
  overload: osu.Framework.Graphics.TransformableExtensions.MakeTransform*
  nameWithType.vb: TransformableExtensions.MakeTransform(Of TThis, TValue)(TThis, String, TValue, Double, Easing, String)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MakeTransform(Of TThis, TValue)(TThis, String, TValue, Double, osu.Framework.Graphics.Easing, String)
  name.vb: MakeTransform(Of TThis, TValue)(TThis, String, TValue, Double, Easing, String)
- uid: osu.Framework.Graphics.TransformableExtensions.MakeTransform``3(``0,System.String,``2,System.Double,``1@,System.String)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MakeTransform``3(``0,System.String,``2,System.Double,``1@,System.String)
  id: MakeTransform``3(``0,System.String,``2,System.Double,``1@,System.String)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MakeTransform<TThis, TEasing, TValue>(TThis, string, TValue, double, in TEasing, string)
  nameWithType: TransformableExtensions.MakeTransform<TThis, TEasing, TValue>(TThis, string, TValue, double, in TEasing, string)
  fullName: osu.Framework.Graphics.TransformableExtensions.MakeTransform<TThis, TEasing, TValue>(TThis, string, TValue, double, in TEasing, string)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MakeTransform
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 105
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Creates a <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> for smoothly changing <code class="paramref">propertyOrFieldName</code>

    over time using the given <code class="paramref">easing</code> for tweening.

    <xref href="osu.Framework.Graphics.TransformableExtensions.PopulateTransform%60%603(%60%602%2cosu.Framework.Graphics.Transforms.Transform%7b%60%600%2c%60%601%2c%60%602%7d%2c%60%600%2cSystem.Double%2c%60%601%40)" data-throw-if-not-resolved="false"></xref> is invoked as part of this method.
  example: []
  syntax:
    content: 'public static Transform<TValue, TEasing, TThis> MakeTransform<TThis, TEasing, TValue>(this TThis t, string propertyOrFieldName, TValue newValue, double duration, in TEasing easing, string grouping = null) where TThis : class, ITransformable where TEasing : IEasingFunction'
    parameters:
    - id: t
      type: '{TThis}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: propertyOrFieldName
      type: System.String
      description: The property or field name of the member ot <code class="typeparamref">TThis</code> to transform.
    - id: newValue
      type: '{TValue}'
      description: The value to transform to.
    - id: duration
      type: System.Double
      description: The transform duration.
    - id: easing
      type: '{TEasing}'
      description: The transform easing to be used for tweening.
    - id: grouping
      type: System.String
      description: An optional grouping specification to be used when the same property may be touched by multiple transform types.
    typeParameters:
    - id: TThis
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    - id: TEasing
      description: The type of easing.
    - id: TValue
      description: The value type which is being transformed.
    return:
      type: osu.Framework.Graphics.Transforms.Transform{{TValue},{TEasing},{TThis}}
      description: The resulting <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function MakeTransform(Of TThis As {Class, ITransformable}, TEasing As IEasingFunction, TValue)(t As TThis, propertyOrFieldName As String, newValue As TValue, duration As Double, easing As TEasing, grouping As String = Nothing) As Transform(Of TValue, TEasing, TThis)
  overload: osu.Framework.Graphics.TransformableExtensions.MakeTransform*
  nameWithType.vb: TransformableExtensions.MakeTransform(Of TThis, TEasing, TValue)(TThis, String, TValue, Double, TEasing, String)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MakeTransform(Of TThis, TEasing, TValue)(TThis, String, TValue, Double, TEasing, String)
  name.vb: MakeTransform(Of TThis, TEasing, TValue)(TThis, String, TValue, Double, TEasing, String)
- uid: osu.Framework.Graphics.TransformableExtensions.PopulateTransform``2(``1,osu.Framework.Graphics.Transforms.Transform{``0,osu.Framework.Graphics.Transforms.DefaultEasingFunction,``1},``0,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``2(``1,osu.Framework.Graphics.Transforms.Transform{``0,osu.Framework.Graphics.Transforms.DefaultEasingFunction,``1},``0,System.Double,osu.Framework.Graphics.Easing)
  id: PopulateTransform``2(``1,osu.Framework.Graphics.Transforms.Transform{``0,osu.Framework.Graphics.Transforms.DefaultEasingFunction,``1},``0,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: PopulateTransform<TValue, TThis>(TThis, Transform<TValue, DefaultEasingFunction, TThis>, TValue, double, Easing)
  nameWithType: TransformableExtensions.PopulateTransform<TValue, TThis>(TThis, Transform<TValue, DefaultEasingFunction, TThis>, TValue, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.PopulateTransform<TValue, TThis>(TThis, osu.Framework.Graphics.Transforms.Transform<TValue, osu.Framework.Graphics.Transforms.DefaultEasingFunction, TThis>, TValue, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: PopulateTransform
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 122
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Populates a newly created <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> with necessary values.

    All <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref>s must be populated by this method prior to being used.
  example: []
  syntax:
    content: 'public static Transform<TValue, DefaultEasingFunction, TThis> PopulateTransform<TValue, TThis>(this TThis t, Transform<TValue, DefaultEasingFunction, TThis> transform, TValue newValue, double duration = 0, Easing easing = Easing.None) where TThis : class, ITransformable'
    parameters:
    - id: t
      type: '{TThis}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: transform
      type: osu.Framework.Graphics.Transforms.Transform{{TValue},osu.Framework.Graphics.Transforms.DefaultEasingFunction,{TThis}}
      description: The transform to populate.
    - id: newValue
      type: '{TValue}'
      description: The value to transform to.
    - id: duration
      type: System.Double
      description: The transform duration.
    - id: easing
      type: osu.Framework.Graphics.Easing
      description: The transform easing to be used for tweening.
    typeParameters:
    - id: TValue
      description: The value type which is being transformed.
    - id: TThis
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    return:
      type: osu.Framework.Graphics.Transforms.Transform{{TValue},osu.Framework.Graphics.Transforms.DefaultEasingFunction,{TThis}}
      description: The populated <code class="paramref">transform</code>.
    content.vb: Public Shared Function PopulateTransform(Of TValue, TThis As {Class, ITransformable})(t As TThis, transform As Transform(Of TValue, DefaultEasingFunction, TThis), newValue As TValue, duration As Double = 0, easing As Easing = Easing.None) As Transform(Of TValue, DefaultEasingFunction, TThis)
  overload: osu.Framework.Graphics.TransformableExtensions.PopulateTransform*
  nameWithType.vb: TransformableExtensions.PopulateTransform(Of TValue, TThis)(TThis, Transform(Of TValue, DefaultEasingFunction, TThis), TValue, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.PopulateTransform(Of TValue, TThis)(TThis, osu.Framework.Graphics.Transforms.Transform(Of TValue, osu.Framework.Graphics.Transforms.DefaultEasingFunction, TThis), TValue, Double, osu.Framework.Graphics.Easing)
  name.vb: PopulateTransform(Of TValue, TThis)(TThis, Transform(Of TValue, DefaultEasingFunction, TThis), TValue, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)
  id: PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: PopulateTransform<TValue, TEasing, TThis>(TThis, Transform<TValue, TEasing, TThis>, TValue, double, in TEasing)
  nameWithType: TransformableExtensions.PopulateTransform<TValue, TEasing, TThis>(TThis, Transform<TValue, TEasing, TThis>, TValue, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.PopulateTransform<TValue, TEasing, TThis>(TThis, osu.Framework.Graphics.Transforms.Transform<TValue, TEasing, TThis>, TValue, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: PopulateTransform
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 140
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Populates a newly created <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> with necessary values.

    All <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref>s must be populated by this method prior to being used.
  example: []
  syntax:
    content: 'public static Transform<TValue, TEasing, TThis> PopulateTransform<TValue, TEasing, TThis>(this TThis t, Transform<TValue, TEasing, TThis> transform, TValue newValue, double duration, in TEasing easing) where TEasing : IEasingFunction where TThis : class, ITransformable'
    parameters:
    - id: t
      type: '{TThis}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: transform
      type: osu.Framework.Graphics.Transforms.Transform{{TValue},{TEasing},{TThis}}
      description: The transform to populate.
    - id: newValue
      type: '{TValue}'
      description: The value to transform to.
    - id: duration
      type: System.Double
      description: The transform duration.
    - id: easing
      type: '{TEasing}'
      description: The transform easing to be used for tweening.
    typeParameters:
    - id: TValue
      description: The value type which is being transformed.
    - id: TEasing
      description: The type of easing.
    - id: TThis
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    return:
      type: osu.Framework.Graphics.Transforms.Transform{{TValue},{TEasing},{TThis}}
      description: The populated <code class="paramref">transform</code>.
    content.vb: Public Shared Function PopulateTransform(Of TValue, TEasing As IEasingFunction, TThis As {Class, ITransformable})(t As TThis, transform As Transform(Of TValue, TEasing, TThis), newValue As TValue, duration As Double, easing As TEasing) As Transform(Of TValue, TEasing, TThis)
  overload: osu.Framework.Graphics.TransformableExtensions.PopulateTransform*
  nameWithType.vb: TransformableExtensions.PopulateTransform(Of TValue, TEasing, TThis)(TThis, Transform(Of TValue, TEasing, TThis), TValue, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.PopulateTransform(Of TValue, TEasing, TThis)(TThis, osu.Framework.Graphics.Transforms.Transform(Of TValue, TEasing, TThis), TValue, Double, TEasing)
  name.vb: PopulateTransform(Of TValue, TEasing, TThis)(TThis, Transform(Of TValue, TEasing, TThis), TValue, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.Animate``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  commentId: M:osu.Framework.Graphics.TransformableExtensions.Animate``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  id: Animate``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: Animate<T>(T, params Generator[])
  nameWithType: TransformableExtensions.Animate<T>(T, params TransformSequence<T>.Generator[])
  fullName: osu.Framework.Graphics.TransformableExtensions.Animate<T>(T, params osu.Framework.Graphics.Transforms.TransformSequence<T>.Generator[])
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Animate
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 186
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Applies <code class="paramref">childGenerators</code> via TransformSequence.Append(IEnumerable{Generator})/&gt;.
  example: []
  syntax:
    content: 'public static TransformSequence<T> Animate<T>(this T transformable, params TransformSequence<T>.Generator[] childGenerators) where T : class, ITransformable'
    parameters:
    - id: transformable
      type: '{T}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: childGenerators
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}.Generator[]
      description: The optional Generators for <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>s to be appended.
    typeParameters:
    - id: T
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: This <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Animate(Of T As {Class, ITransformable})(transformable As T, ParamArray childGenerators As TransformSequence(Of T).Generator()) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.Animate*
  nameWithType.vb: TransformableExtensions.Animate(Of T)(T, ParamArray TransformSequence(Of T).Generator())
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.Animate(Of T)(T, ParamArray osu.Framework.Graphics.Transforms.TransformSequence(Of T).Generator())
  name.vb: Animate(Of T)(T, ParamArray Generator())
- uid: osu.Framework.Graphics.TransformableExtensions.Delay``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  commentId: M:osu.Framework.Graphics.TransformableExtensions.Delay``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  id: Delay``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: Delay<T>(T, double, params Generator[])
  nameWithType: TransformableExtensions.Delay<T>(T, double, params TransformSequence<T>.Generator[])
  fullName: osu.Framework.Graphics.TransformableExtensions.Delay<T>(T, double, params osu.Framework.Graphics.Transforms.TransformSequence<T>.Generator[])
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Delay
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 198
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Advances the start time of future appended <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>s by <code class="paramref">delay</code> milliseconds.

    Then, <code class="paramref">childGenerators</code> are appended via TransformSequence.Append(IEnumerable{Generator})/&gt;.
  example: []
  syntax:
    content: 'public static TransformSequence<T> Delay<T>(this T transformable, double delay, params TransformSequence<T>.Generator[] childGenerators) where T : class, ITransformable'
    parameters:
    - id: transformable
      type: '{T}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: delay
      type: System.Double
      description: The delay to advance the start time by.
    - id: childGenerators
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}.Generator[]
      description: The optional Generators for <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>s to be appended.
    typeParameters:
    - id: T
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: This <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function Delay(Of T As {Class, ITransformable})(transformable As T, delay As Double, ParamArray childGenerators As TransformSequence(Of T).Generator()) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.Delay*
  nameWithType.vb: TransformableExtensions.Delay(Of T)(T, Double, ParamArray TransformSequence(Of T).Generator())
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.Delay(Of T)(T, Double, ParamArray osu.Framework.Graphics.Transforms.TransformSequence(Of T).Generator())
  name.vb: Delay(Of T)(T, Double, ParamArray Generator())
- uid: osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished``1(``0)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished``1(``0)
  id: DelayUntilTransformsFinished``1(``0)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: DelayUntilTransformsFinished<T>(T)
  nameWithType: TransformableExtensions.DelayUntilTransformsFinished<T>(T)
  fullName: osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished<T>(T)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: DelayUntilTransformsFinished
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 205
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Returns a <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> which waits for all existing transforms to finish.
  example: []
  syntax:
    content: 'public static TransformSequence<T> DelayUntilTransformsFinished<T>(this T transformable) where T : Transformable'
    parameters:
    - id: transformable
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> which has a delay waiting for all transforms to be completed.
    content.vb: Public Shared Function DelayUntilTransformsFinished(Of T As Transformable)(transformable As T) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished*
  nameWithType.vb: TransformableExtensions.DelayUntilTransformsFinished(Of T)(T)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished(Of T)(T)
  name.vb: DelayUntilTransformsFinished(Of T)(T)
- uid: osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double,System.Int32,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  commentId: M:osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double,System.Int32,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  id: Loop``1(``0,System.Double,System.Int32,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: Loop<T>(T, double, int, params Generator[])
  nameWithType: TransformableExtensions.Loop<T>(T, double, int, params TransformSequence<T>.Generator[])
  fullName: osu.Framework.Graphics.TransformableExtensions.Loop<T>(T, double, int, params osu.Framework.Graphics.Transforms.TransformSequence<T>.Generator[])
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Loop
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 221
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Append a looping <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to this <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.

    All <xref href="osu.Framework.Graphics.Transforms.Transform" data-throw-if-not-resolved="false"></xref>s generated by <code class="paramref">childGenerators</code> are appended to

    this <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> and then repeated <code class="paramref">numIters</code> times

    with <code class="paramref">pause</code> milliseconds between iterations.
  example: []
  syntax:
    content: 'public static TransformSequence<T> Loop<T>(this T transformable, double pause, int numIters, params TransformSequence<T>.Generator[] childGenerators) where T : class, ITransformable'
    parameters:
    - id: transformable
      type: '{T}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: pause
      type: System.Double
      description: The pause between iterations in milliseconds.
    - id: numIters
      type: System.Int32
      description: The number of iterations.
    - id: childGenerators
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}.Generator[]
      description: The functions to generate the <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>s to be looped.
    typeParameters:
    - id: T
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: This <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function [Loop](Of T As {Class, ITransformable})(transformable As T, pause As Double, numIters As Integer, ParamArray childGenerators As TransformSequence(Of T).Generator()) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.Loop*
  nameWithType.vb: TransformableExtensions.Loop(Of T)(T, Double, Integer, ParamArray TransformSequence(Of T).Generator())
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.Loop(Of T)(T, Double, Integer, ParamArray osu.Framework.Graphics.Transforms.TransformSequence(Of T).Generator())
  name.vb: Loop(Of T)(T, Double, Integer, ParamArray Generator())
- uid: osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  commentId: M:osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  id: Loop``1(``0,System.Double,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: Loop<T>(T, double, params Generator[])
  nameWithType: TransformableExtensions.Loop<T>(T, double, params TransformSequence<T>.Generator[])
  fullName: osu.Framework.Graphics.TransformableExtensions.Loop<T>(T, double, params osu.Framework.Graphics.Transforms.TransformSequence<T>.Generator[])
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Loop
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 236
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Append a looping <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to this <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.

    All <xref href="osu.Framework.Graphics.Transforms.Transform" data-throw-if-not-resolved="false"></xref>s generated by <code class="paramref">childGenerators</code> are appended to

    this <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> and then repeated indefinitely with <code class="paramref">pause</code>

    milliseconds between iterations.
  example: []
  syntax:
    content: 'public static TransformSequence<T> Loop<T>(this T transformable, double pause, params TransformSequence<T>.Generator[] childGenerators) where T : class, ITransformable'
    parameters:
    - id: transformable
      type: '{T}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: pause
      type: System.Double
      description: The pause between iterations in milliseconds.
    - id: childGenerators
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}.Generator[]
      description: The functions to generate the <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>s to be looped.
    typeParameters:
    - id: T
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: This <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function [Loop](Of T As {Class, ITransformable})(transformable As T, pause As Double, ParamArray childGenerators As TransformSequence(Of T).Generator()) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.Loop*
  nameWithType.vb: TransformableExtensions.Loop(Of T)(T, Double, ParamArray TransformSequence(Of T).Generator())
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.Loop(Of T)(T, Double, ParamArray osu.Framework.Graphics.Transforms.TransformSequence(Of T).Generator())
  name.vb: Loop(Of T)(T, Double, ParamArray Generator())
- uid: osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  commentId: M:osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  id: Loop``1(``0,osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator[])
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: Loop<T>(T, params Generator[])
  nameWithType: TransformableExtensions.Loop<T>(T, params TransformSequence<T>.Generator[])
  fullName: osu.Framework.Graphics.TransformableExtensions.Loop<T>(T, params osu.Framework.Graphics.Transforms.TransformSequence<T>.Generator[])
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Loop
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 250
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Append a looping <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to this <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.

    All <xref href="osu.Framework.Graphics.Transforms.Transform" data-throw-if-not-resolved="false"></xref>s generated by <code class="paramref">childGenerators</code> are appended to

    this <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> and then repeated indefinitely.

    milliseconds between iterations.
  example: []
  syntax:
    content: 'public static TransformSequence<T> Loop<T>(this T transformable, params TransformSequence<T>.Generator[] childGenerators) where T : class, ITransformable'
    parameters:
    - id: transformable
      type: '{T}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: childGenerators
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}.Generator[]
      description: The functions to generate the <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>s to be looped.
    typeParameters:
    - id: T
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: This <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function [Loop](Of T As {Class, ITransformable})(transformable As T, ParamArray childGenerators As TransformSequence(Of T).Generator()) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.Loop*
  nameWithType.vb: TransformableExtensions.Loop(Of T)(T, ParamArray TransformSequence(Of T).Generator())
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.Loop(Of T)(T, ParamArray osu.Framework.Graphics.Transforms.TransformSequence(Of T).Generator())
  name.vb: Loop(Of T)(T, ParamArray Generator())
- uid: osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.Loop``1(``0,System.Double)
  id: Loop``1(``0,System.Double)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: Loop<T>(T, double)
  nameWithType: TransformableExtensions.Loop<T>(T, double)
  fullName: osu.Framework.Graphics.TransformableExtensions.Loop<T>(T, double)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Loop
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 262
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: >-
    Append a looping <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to this <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to repeat indefinitely with <code class="paramref">pause</code>

    milliseconds between iterations.
  example: []
  syntax:
    content: 'public static TransformSequence<T> Loop<T>(this T transformable, double pause = 0) where T : class, ITransformable'
    parameters:
    - id: transformable
      type: '{T}'
      description: The <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> will be applied to.
    - id: pause
      type: System.Double
      description: The pause between iterations in milliseconds.
    typeParameters:
    - id: T
      description: The type of the <xref href="osu.Framework.Graphics.Transforms.ITransformable" data-throw-if-not-resolved="false"></xref> the <xref href="osu.Framework.Graphics.Transforms.Transform%602" data-throw-if-not-resolved="false"></xref> can be applied to.
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: This <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function [Loop](Of T As {Class, ITransformable})(transformable As T, pause As Double = 0) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.Loop*
  nameWithType.vb: TransformableExtensions.Loop(Of T)(T, Double)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.Loop(Of T)(T, Double)
  name.vb: Loop(Of T)(T, Double)
- uid: osu.Framework.Graphics.TransformableExtensions.Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single)
  id: Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: Spin<T>(T, double, RotationDirection, float)
  nameWithType: TransformableExtensions.Spin<T>(T, double, RotationDirection, float)
  fullName: osu.Framework.Graphics.TransformableExtensions.Spin<T>(T, double, osu.Framework.Graphics.RotationDirection, float)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Spin
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 270
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Rotate over one full rotation with provided parameters.
  example: []
  syntax:
    content: 'public static TransformSequence<T> Spin<T>(this T drawable, double revolutionDuration, RotationDirection direction, float startRotation = 0) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: revolutionDuration
      type: System.Double
    - id: direction
      type: osu.Framework.Graphics.RotationDirection
    - id: startRotation
      type: System.Single
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function Spin(Of T As Drawable)(drawable As T, revolutionDuration As Double, direction As RotationDirection, startRotation As Single = 0) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.Spin*
  nameWithType.vb: TransformableExtensions.Spin(Of T)(T, Double, RotationDirection, Single)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.Spin(Of T)(T, Double, osu.Framework.Graphics.RotationDirection, Single)
  name.vb: Spin(Of T)(T, Double, RotationDirection, Single)
- uid: osu.Framework.Graphics.TransformableExtensions.Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single,System.Int32)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single,System.Int32)
  id: Spin``1(``0,System.Double,osu.Framework.Graphics.RotationDirection,System.Single,System.Int32)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: Spin<T>(T, double, RotationDirection, float, int)
  nameWithType: TransformableExtensions.Spin<T>(T, double, RotationDirection, float, int)
  fullName: osu.Framework.Graphics.TransformableExtensions.Spin<T>(T, double, osu.Framework.Graphics.RotationDirection, float, int)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: Spin
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 278
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Rotate <code class="paramref">numRevolutions</code> times with provided parameters.
  example: []
  syntax:
    content: 'public static TransformSequence<T> Spin<T>(this T drawable, double revolutionDuration, RotationDirection direction, float startRotation, int numRevolutions) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: revolutionDuration
      type: System.Double
    - id: direction
      type: osu.Framework.Graphics.RotationDirection
    - id: startRotation
      type: System.Single
    - id: numRevolutions
      type: System.Int32
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function Spin(Of T As Drawable)(drawable As T, revolutionDuration As Double, direction As RotationDirection, startRotation As Single, numRevolutions As Integer) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.Spin*
  nameWithType.vb: TransformableExtensions.Spin(Of T)(T, Double, RotationDirection, Single, Integer)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.Spin(Of T)(T, Double, osu.Framework.Graphics.RotationDirection, Single, Integer)
  name.vb: Spin(Of T)(T, Double, RotationDirection, Single, Integer)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeIn``1(``0,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeIn``1(``0,System.Double,osu.Framework.Graphics.Easing)
  id: FadeIn``1(``0,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeIn<T>(T, double, Easing)
  nameWithType: TransformableExtensions.FadeIn<T>(T, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeIn<T>(T, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeIn
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 288
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> to 1 over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeIn<T>(this T drawable, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeIn(Of T As Drawable)(drawable As T, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeIn*
  nameWithType.vb: TransformableExtensions.FadeIn(Of T)(T, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeIn(Of T)(T, Double, osu.Framework.Graphics.Easing)
  name.vb: FadeIn(Of T)(T, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero``1(``0,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeInFromZero``1(``0,System.Double,osu.Framework.Graphics.Easing)
  id: FadeInFromZero``1(``0,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeInFromZero<T>(T, double, Easing)
  nameWithType: TransformableExtensions.FadeInFromZero<T>(T, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero<T>(T, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeInFromZero
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 296
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> from 0 to 1 over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeInFromZero<T>(this T drawable, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeInFromZero(Of T As Drawable)(drawable As T, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero*
  nameWithType.vb: TransformableExtensions.FadeInFromZero(Of T)(T, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero(Of T)(T, Double, osu.Framework.Graphics.Easing)
  name.vb: FadeInFromZero(Of T)(T, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeOut``1(``0,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeOut``1(``0,System.Double,osu.Framework.Graphics.Easing)
  id: FadeOut``1(``0,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeOut<T>(T, double, Easing)
  nameWithType: TransformableExtensions.FadeOut<T>(T, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeOut<T>(T, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeOut
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 304
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> to 0 over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeOut<T>(this T drawable, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeOut(Of T As Drawable)(drawable As T, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeOut*
  nameWithType.vb: TransformableExtensions.FadeOut(Of T)(T, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeOut(Of T)(T, Double, osu.Framework.Graphics.Easing)
  name.vb: FadeOut(Of T)(T, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne``1(``0,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne``1(``0,System.Double,osu.Framework.Graphics.Easing)
  id: FadeOutFromOne``1(``0,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeOutFromOne<T>(T, double, Easing)
  nameWithType: TransformableExtensions.FadeOutFromOne<T>(T, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne<T>(T, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeOutFromOne
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 312
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> from 1 to 0 over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeOutFromOne<T>(this T drawable, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeOutFromOne(Of T As Drawable)(drawable As T, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne*
  nameWithType.vb: TransformableExtensions.FadeOutFromOne(Of T)(T, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne(Of T)(T, Double, osu.Framework.Graphics.Easing)
  name.vb: FadeOutFromOne(Of T)(T, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: FadeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeTo<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.FadeTo<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeTo<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 320
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeTo<T>(this T drawable, float newAlpha, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newAlpha
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeTo(Of T As Drawable)(drawable As T, newAlpha As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeTo*
  nameWithType.vb: TransformableExtensions.FadeTo(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeTo(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: FadeTo(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)
  id: FadeColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeColour<T>(T, ColourInfo, double, Easing)
  nameWithType: TransformableExtensions.FadeColour<T>(T, ColourInfo, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeColour<T>(T, osu.Framework.Graphics.Colour.ColourInfo, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeColour
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 328
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Colour" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeColour<T>(this T drawable, ColourInfo newColour, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newColour
      type: osu.Framework.Graphics.Colour.ColourInfo
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeColour(Of T As Drawable)(drawable As T, newColour As ColourInfo, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeColour*
  nameWithType.vb: TransformableExtensions.FadeColour(Of T)(T, ColourInfo, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeColour(Of T)(T, osu.Framework.Graphics.Colour.ColourInfo, Double, osu.Framework.Graphics.Easing)
  name.vb: FadeColour(Of T)(T, ColourInfo, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FlashColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FlashColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)
  id: FlashColour``1(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FlashColour<T>(T, ColourInfo, double, Easing)
  nameWithType: TransformableExtensions.FlashColour<T>(T, ColourInfo, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FlashColour<T>(T, osu.Framework.Graphics.Colour.ColourInfo, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FlashColour
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 336
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Instantaneously flashes <xref href="osu.Framework.Graphics.Drawable.Colour" data-throw-if-not-resolved="false"></xref>, then smoothly changes it back over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FlashColour<T>(this T drawable, ColourInfo flashColour, double duration, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: flashColour
      type: osu.Framework.Graphics.Colour.ColourInfo
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FlashColour(Of T As Drawable)(drawable As T, flashColour As ColourInfo, duration As Double, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FlashColour*
  nameWithType.vb: TransformableExtensions.FlashColour(Of T)(T, ColourInfo, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FlashColour(Of T)(T, osu.Framework.Graphics.Colour.ColourInfo, Double, osu.Framework.Graphics.Easing)
  name.vb: FlashColour(Of T)(T, ColourInfo, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.RotateTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.RotateTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: RotateTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: RotateTo<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.RotateTo<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.RotateTo<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: RotateTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 344
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Rotation" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> RotateTo<T>(this T drawable, float newRotation, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newRotation
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function RotateTo(Of T As Drawable)(drawable As T, newRotation As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.RotateTo*
  nameWithType.vb: TransformableExtensions.RotateTo(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.RotateTo(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: RotateTo(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.ScaleTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ScaleTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: ScaleTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ScaleTo<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.ScaleTo<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ScaleTo<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ScaleTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 352
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Scale" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ScaleTo<T>(this T drawable, float newScale, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newScale
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ScaleTo(Of T As Drawable)(drawable As T, newScale As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ScaleTo*
  nameWithType.vb: TransformableExtensions.ScaleTo(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ScaleTo(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: ScaleTo(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.ScaleTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ScaleTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  id: ScaleTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ScaleTo<T>(T, Vector2, double, Easing)
  nameWithType: TransformableExtensions.ScaleTo<T>(T, Vector2, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ScaleTo<T>(T, osuTK.Vector2, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ScaleTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 360
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Scale" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ScaleTo<T>(this T drawable, Vector2 newScale, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newScale
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ScaleTo(Of T As Drawable)(drawable As T, newScale As Vector2, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ScaleTo*
  nameWithType.vb: TransformableExtensions.ScaleTo(Of T)(T, Vector2, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ScaleTo(Of T)(T, osuTK.Vector2, Double, osu.Framework.Graphics.Easing)
  name.vb: ScaleTo(Of T)(T, Vector2, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ResizeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: ResizeTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ResizeTo<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.ResizeTo<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeTo<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ResizeTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 368
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Size" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ResizeTo<T>(this T drawable, float newSize, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newSize
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ResizeTo(Of T As Drawable)(drawable As T, newSize As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ResizeTo*
  nameWithType.vb: TransformableExtensions.ResizeTo(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ResizeTo(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: ResizeTo(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ResizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  id: ResizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ResizeTo<T>(T, Vector2, double, Easing)
  nameWithType: TransformableExtensions.ResizeTo<T>(T, Vector2, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeTo<T>(T, osuTK.Vector2, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ResizeTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 376
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Size" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ResizeTo<T>(this T drawable, Vector2 newSize, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newSize
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ResizeTo(Of T As Drawable)(drawable As T, newSize As Vector2, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ResizeTo*
  nameWithType.vb: TransformableExtensions.ResizeTo(Of T)(T, Vector2, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ResizeTo(Of T)(T, osuTK.Vector2, Double, osu.Framework.Graphics.Easing)
  name.vb: ResizeTo(Of T)(T, Vector2, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: ResizeWidthTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ResizeWidthTo<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.ResizeWidthTo<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ResizeWidthTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 384
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Width" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ResizeWidthTo<T>(this T drawable, float newWidth, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newWidth
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ResizeWidthTo(Of T As Drawable)(drawable As T, newWidth As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo*
  nameWithType.vb: TransformableExtensions.ResizeWidthTo(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: ResizeWidthTo(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: ResizeHeightTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ResizeHeightTo<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.ResizeHeightTo<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ResizeHeightTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 392
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Height" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ResizeHeightTo<T>(this T drawable, float newHeight, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newHeight
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ResizeHeightTo(Of T As Drawable)(drawable As T, newHeight As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo*
  nameWithType.vb: TransformableExtensions.ResizeHeightTo(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: ResizeHeightTo(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  id: MoveTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveTo<T>(T, Vector2, double, Easing)
  nameWithType: TransformableExtensions.MoveTo<T>(T, Vector2, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveTo<T>(T, osuTK.Vector2, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 400
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Position" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveTo<T>(this T drawable, Vector2 newPosition, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newPosition
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveTo(Of T As Drawable)(drawable As T, newPosition As Vector2, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveTo*
  nameWithType.vb: TransformableExtensions.MoveTo(Of T)(T, Vector2, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveTo(Of T)(T, osuTK.Vector2, Double, osu.Framework.Graphics.Easing)
  name.vb: MoveTo(Of T)(T, Vector2, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveTo``1(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveTo``1(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: MoveTo``1(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveTo<T>(T, Direction, float, double, Easing)
  nameWithType: TransformableExtensions.MoveTo<T>(T, Direction, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveTo<T>(T, osu.Framework.Graphics.Direction, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 408
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.X" data-throw-if-not-resolved="false"></xref> or <xref href="osu.Framework.Graphics.Drawable.Y" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveTo<T>(this T drawable, Direction direction, float destination, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: direction
      type: osu.Framework.Graphics.Direction
    - id: destination
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveTo(Of T As Drawable)(drawable As T, direction As Direction, destination As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveTo*
  nameWithType.vb: TransformableExtensions.MoveTo(Of T)(T, Direction, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveTo(Of T)(T, osu.Framework.Graphics.Direction, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: MoveTo(Of T)(T, Direction, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToX``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveToX``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: MoveToX``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveToX<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.MoveToX<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToX<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveToX
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 416
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.X" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveToX<T>(this T drawable, float destination, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: destination
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveToX(Of T As Drawable)(drawable As T, destination As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveToX*
  nameWithType.vb: TransformableExtensions.MoveToX(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveToX(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: MoveToX(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToY``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveToY``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: MoveToY``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveToY<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.MoveToY<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToY<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveToY
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 424
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Y" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveToY<T>(this T drawable, float destination, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: destination
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveToY(Of T As Drawable)(drawable As T, destination As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveToY*
  nameWithType.vb: TransformableExtensions.MoveToY(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveToY(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: MoveToY(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToOffset``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveToOffset``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  id: MoveToOffset``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveToOffset<T>(T, Vector2, double, Easing)
  nameWithType: TransformableExtensions.MoveToOffset<T>(T, Vector2, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToOffset<T>(T, osuTK.Vector2, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveToOffset
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 432
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Position" data-throw-if-not-resolved="false"></xref> by an offset to its final value over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveToOffset<T>(this T drawable, Vector2 offset, double duration = 0, Easing easing = Easing.None) where T : Drawable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: offset
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveToOffset(Of T As Drawable)(drawable As T, offset As Vector2, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveToOffset*
  nameWithType.vb: TransformableExtensions.MoveToOffset(Of T)(T, Vector2, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveToOffset(Of T)(T, osuTK.Vector2, Double, osu.Framework.Graphics.Easing)
  name.vb: MoveToOffset(Of T)(T, Vector2, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  id: TransformRelativeChildSizeTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformRelativeChildSizeTo<T>(T, Vector2, double, Easing)
  nameWithType: TransformableExtensions.TransformRelativeChildSizeTo<T>(T, Vector2, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo<T>(T, osuTK.Vector2, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformRelativeChildSizeTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 440
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Containers.IContainer.RelativeChildSize" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TransformRelativeChildSizeTo<T>(this T container, Vector2 newSize, double duration = 0, Easing easing = Easing.None) where T : class, IContainer'
    parameters:
    - id: container
      type: '{T}'
    - id: newSize
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformRelativeChildSizeTo(Of T As {Class, IContainer})(container As T, newSize As Vector2, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo*
  nameWithType.vb: TransformableExtensions.TransformRelativeChildSizeTo(Of T)(T, Vector2, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo(Of T)(T, osuTK.Vector2, Double, osu.Framework.Graphics.Easing)
  name.vb: TransformRelativeChildSizeTo(Of T)(T, Vector2, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  id: TransformRelativeChildOffsetTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformRelativeChildOffsetTo<T>(T, Vector2, double, Easing)
  nameWithType: TransformableExtensions.TransformRelativeChildOffsetTo<T>(T, Vector2, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo<T>(T, osuTK.Vector2, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformRelativeChildOffsetTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 448
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TransformRelativeChildOffsetTo<T>(this T container, Vector2 newOffset, double duration = 0, Easing easing = Easing.None) where T : class, IContainer'
    parameters:
    - id: container
      type: '{T}'
    - id: newOffset
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformRelativeChildOffsetTo(Of T As {Class, IContainer})(container As T, newOffset As Vector2, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo*
  nameWithType.vb: TransformableExtensions.TransformRelativeChildOffsetTo(Of T)(T, Vector2, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo(Of T)(T, osuTK.Vector2, Double, osu.Framework.Graphics.Easing)
  name.vb: TransformRelativeChildOffsetTo(Of T)(T, Vector2, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.BlurTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.BlurTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  id: BlurTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: BlurTo<T>(T, Vector2, double, Easing)
  nameWithType: TransformableExtensions.BlurTo<T>(T, Vector2, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.BlurTo<T>(T, osuTK.Vector2, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: BlurTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 456
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> BlurTo<T>(this T bufferedContainer, Vector2 newBlurSigma, double duration = 0, Easing easing = Easing.None) where T : class, IBufferedContainer'
    parameters:
    - id: bufferedContainer
      type: '{T}'
    - id: newBlurSigma
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function BlurTo(Of T As {Class, IBufferedContainer})(bufferedContainer As T, newBlurSigma As Vector2, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.BlurTo*
  nameWithType.vb: TransformableExtensions.BlurTo(Of T)(T, Vector2, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.BlurTo(Of T)(T, osuTK.Vector2, Double, osu.Framework.Graphics.Easing)
  name.vb: BlurTo(Of T)(T, Vector2, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  id: TransformSpacingTo``1(``0,osuTK.Vector2,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformSpacingTo<T>(T, Vector2, double, Easing)
  nameWithType: TransformableExtensions.TransformSpacingTo<T>(T, Vector2, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo<T>(T, osuTK.Vector2, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformSpacingTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 464
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TransformSpacingTo<T>(this T flowContainer, Vector2 newSpacing, double duration = 0, Easing easing = Easing.None) where T : class, IFillFlowContainer'
    parameters:
    - id: flowContainer
      type: '{T}'
    - id: newSpacing
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformSpacingTo(Of T As {Class, IFillFlowContainer})(flowContainer As T, newSpacing As Vector2, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo*
  nameWithType.vb: TransformableExtensions.TransformSpacingTo(Of T)(T, Vector2, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo(Of T)(T, osuTK.Vector2, Double, osu.Framework.Graphics.Easing)
  name.vb: TransformSpacingTo(Of T)(T, Vector2, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  id: FadeEdgeEffectTo``1(``0,System.Single,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeEdgeEffectTo<T>(T, float, double, Easing)
  nameWithType: TransformableExtensions.FadeEdgeEffectTo<T>(T, float, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo<T>(T, float, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeEdgeEffectTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 472
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts the alpha channel of the colour of <xref href="osu.Framework.Graphics.Containers.IContainer.EdgeEffect" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeEdgeEffectTo<T>(this T container, float newAlpha, double duration = 0, Easing easing = Easing.None) where T : class, IContainer'
    parameters:
    - id: container
      type: '{T}'
    - id: newAlpha
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeEdgeEffectTo(Of T As {Class, IContainer})(container As T, newAlpha As Single, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo*
  nameWithType.vb: TransformableExtensions.FadeEdgeEffectTo(Of T)(T, Single, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo(Of T)(T, Single, Double, osu.Framework.Graphics.Easing)
  name.vb: FadeEdgeEffectTo(Of T)(T, Single, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``1(``0,osuTK.Graphics.Color4,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``1(``0,osuTK.Graphics.Color4,System.Double,osu.Framework.Graphics.Easing)
  id: FadeEdgeEffectTo``1(``0,osuTK.Graphics.Color4,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeEdgeEffectTo<T>(T, Color4, double, Easing)
  nameWithType: TransformableExtensions.FadeEdgeEffectTo<T>(T, Color4, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo<T>(T, osuTK.Graphics.Color4, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeEdgeEffectTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 480
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts the colour of <xref href="osu.Framework.Graphics.Containers.IContainer.EdgeEffect" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeEdgeEffectTo<T>(this T container, Color4 newColour, double duration = 0, Easing easing = Easing.None) where T : class, IContainer'
    parameters:
    - id: container
      type: '{T}'
    - id: newColour
      type: osuTK.Graphics.Color4
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeEdgeEffectTo(Of T As {Class, IContainer})(container As T, newColour As Color4, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo*
  nameWithType.vb: TransformableExtensions.FadeEdgeEffectTo(Of T)(T, Color4, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo(Of T)(T, osuTK.Graphics.Color4, Double, osu.Framework.Graphics.Easing)
  name.vb: FadeEdgeEffectTo(Of T)(T, Color4, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo``1(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo``1(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,osu.Framework.Graphics.Easing)
  id: TweenEdgeEffectTo``1(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TweenEdgeEffectTo<T>(T, EdgeEffectParameters, double, Easing)
  nameWithType: TransformableExtensions.TweenEdgeEffectTo<T>(T, EdgeEffectParameters, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo<T>(T, osu.Framework.Graphics.Effects.EdgeEffectParameters, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TweenEdgeEffectTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 488
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts all parameters of <xref href="osu.Framework.Graphics.Containers.IContainer.EdgeEffect" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TweenEdgeEffectTo<T>(this T container, EdgeEffectParameters newParameters, double duration = 0, Easing easing = Easing.None) where T : class, IContainer'
    parameters:
    - id: container
      type: '{T}'
    - id: newParameters
      type: osu.Framework.Graphics.Effects.EdgeEffectParameters
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TweenEdgeEffectTo(Of T As {Class, IContainer})(container As T, newParameters As EdgeEffectParameters, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo*
  nameWithType.vb: TransformableExtensions.TweenEdgeEffectTo(Of T)(T, EdgeEffectParameters, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo(Of T)(T, osu.Framework.Graphics.Effects.EdgeEffectParameters, Double, osu.Framework.Graphics.Easing)
  name.vb: TweenEdgeEffectTo(Of T)(T, EdgeEffectParameters, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo``2(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,osu.Framework.Graphics.Easing)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformBindableTo``2(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,osu.Framework.Graphics.Easing)
  id: TransformBindableTo``2(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,osu.Framework.Graphics.Easing)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformBindableTo<T, TValue>(T, Bindable<TValue>, TValue, double, Easing)
  nameWithType: TransformableExtensions.TransformBindableTo<T, TValue>(T, Bindable<TValue>, TValue, double, Easing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo<T, TValue>(T, osu.Framework.Bindables.Bindable<TValue>, TValue, double, osu.Framework.Graphics.Easing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformBindableTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 496
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts the value of a <xref href="osu.Framework.Bindables.Bindable%601" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TransformBindableTo<T, TValue>(this T drawable, Bindable<TValue> bindable, TValue newValue, double duration = 0, Easing easing = Easing.None) where T : class, ITransformable'
    parameters:
    - id: drawable
      type: '{T}'
    - id: bindable
      type: osu.Framework.Bindables.Bindable{{TValue}}
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: newValue
      type: '{TValue}'
    - id: duration
      type: System.Double
    - id: easing
      type: osu.Framework.Graphics.Easing
    typeParameters:
    - id: T
    - id: TValue
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformBindableTo(Of T As {Class, ITransformable}, TValue)(drawable As T, bindable As Bindable(Of TValue), newValue As TValue, duration As Double = 0, easing As Easing = Easing.None) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo*
  nameWithType.vb: TransformableExtensions.TransformBindableTo(Of T, TValue)(T, Bindable(Of TValue), TValue, Double, Easing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo(Of T, TValue)(T, osu.Framework.Bindables.Bindable(Of TValue), TValue, Double, osu.Framework.Graphics.Easing)
  name.vb: TransformBindableTo(Of T, TValue)(T, Bindable(Of TValue), TValue, Double, Easing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeIn``2(``0,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeIn``2(``0,System.Double,``1@)
  id: FadeIn``2(``0,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeIn<T, TEasing>(T, double, in TEasing)
  nameWithType: TransformableExtensions.FadeIn<T, TEasing>(T, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeIn<T, TEasing>(T, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeIn
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 508
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> to 1 over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeIn<T, TEasing>(this T drawable, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeIn(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeIn*
  nameWithType.vb: TransformableExtensions.FadeIn(Of T, TEasing)(T, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeIn(Of T, TEasing)(T, Double, TEasing)
  name.vb: FadeIn(Of T, TEasing)(T, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero``2(``0,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeInFromZero``2(``0,System.Double,``1@)
  id: FadeInFromZero``2(``0,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeInFromZero<T, TEasing>(T, double, in TEasing)
  nameWithType: TransformableExtensions.FadeInFromZero<T, TEasing>(T, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero<T, TEasing>(T, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeInFromZero
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 517
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> from 0 to 1 over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeInFromZero<T, TEasing>(this T drawable, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeInFromZero(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero*
  nameWithType.vb: TransformableExtensions.FadeInFromZero(Of T, TEasing)(T, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero(Of T, TEasing)(T, Double, TEasing)
  name.vb: FadeInFromZero(Of T, TEasing)(T, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeOut``2(``0,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeOut``2(``0,System.Double,``1@)
  id: FadeOut``2(``0,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeOut<T, TEasing>(T, double, in TEasing)
  nameWithType: TransformableExtensions.FadeOut<T, TEasing>(T, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeOut<T, TEasing>(T, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeOut
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 526
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> to 0 over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeOut<T, TEasing>(this T drawable, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeOut(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeOut*
  nameWithType.vb: TransformableExtensions.FadeOut(Of T, TEasing)(T, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeOut(Of T, TEasing)(T, Double, TEasing)
  name.vb: FadeOut(Of T, TEasing)(T, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne``2(``0,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne``2(``0,System.Double,``1@)
  id: FadeOutFromOne``2(``0,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeOutFromOne<T, TEasing>(T, double, in TEasing)
  nameWithType: TransformableExtensions.FadeOutFromOne<T, TEasing>(T, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne<T, TEasing>(T, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeOutFromOne
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 535
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> from 1 to 0 over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeOutFromOne<T, TEasing>(this T drawable, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeOutFromOne(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne*
  nameWithType.vb: TransformableExtensions.FadeOutFromOne(Of T, TEasing)(T, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne(Of T, TEasing)(T, Double, TEasing)
  name.vb: FadeOutFromOne(Of T, TEasing)(T, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeTo``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeTo``2(``0,System.Single,System.Double,``1@)
  id: FadeTo``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeTo<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.FadeTo<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeTo<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 544
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Alpha" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeTo<T, TEasing>(this T drawable, float newAlpha, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newAlpha
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newAlpha As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeTo*
  nameWithType.vb: TransformableExtensions.FadeTo(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeTo(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: FadeTo(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)
  id: FadeColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeColour<T, TEasing>(T, ColourInfo, double, in TEasing)
  nameWithType: TransformableExtensions.FadeColour<T, TEasing>(T, ColourInfo, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeColour<T, TEasing>(T, osu.Framework.Graphics.Colour.ColourInfo, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeColour
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 553
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Colour" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeColour<T, TEasing>(this T drawable, ColourInfo newColour, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newColour
      type: osu.Framework.Graphics.Colour.ColourInfo
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeColour(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newColour As ColourInfo, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeColour*
  nameWithType.vb: TransformableExtensions.FadeColour(Of T, TEasing)(T, ColourInfo, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeColour(Of T, TEasing)(T, osu.Framework.Graphics.Colour.ColourInfo, Double, TEasing)
  name.vb: FadeColour(Of T, TEasing)(T, ColourInfo, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.FlashColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FlashColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)
  id: FlashColour``2(``0,osu.Framework.Graphics.Colour.ColourInfo,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FlashColour<T, TEasing>(T, ColourInfo, double, in TEasing)
  nameWithType: TransformableExtensions.FlashColour<T, TEasing>(T, ColourInfo, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FlashColour<T, TEasing>(T, osu.Framework.Graphics.Colour.ColourInfo, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FlashColour
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 562
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Instantaneously flashes <xref href="osu.Framework.Graphics.Drawable.Colour" data-throw-if-not-resolved="false"></xref>, then smoothly changes it back over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FlashColour<T, TEasing>(this T drawable, ColourInfo flashColour, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: flashColour
      type: osu.Framework.Graphics.Colour.ColourInfo
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FlashColour(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, flashColour As ColourInfo, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FlashColour*
  nameWithType.vb: TransformableExtensions.FlashColour(Of T, TEasing)(T, ColourInfo, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FlashColour(Of T, TEasing)(T, osu.Framework.Graphics.Colour.ColourInfo, Double, TEasing)
  name.vb: FlashColour(Of T, TEasing)(T, ColourInfo, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.RotateTo``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.RotateTo``2(``0,System.Single,System.Double,``1@)
  id: RotateTo``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: RotateTo<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.RotateTo<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.RotateTo<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: RotateTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 574
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Rotation" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> RotateTo<T, TEasing>(this T drawable, float newRotation, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newRotation
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function RotateTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newRotation As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.RotateTo*
  nameWithType.vb: TransformableExtensions.RotateTo(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.RotateTo(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: RotateTo(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.ScaleTo``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ScaleTo``2(``0,System.Single,System.Double,``1@)
  id: ScaleTo``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ScaleTo<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.ScaleTo<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ScaleTo<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ScaleTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 583
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Scale" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ScaleTo<T, TEasing>(this T drawable, float newScale, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newScale
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ScaleTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newScale As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ScaleTo*
  nameWithType.vb: TransformableExtensions.ScaleTo(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ScaleTo(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: ScaleTo(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.ScaleTo``2(``0,osuTK.Vector2,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ScaleTo``2(``0,osuTK.Vector2,System.Double,``1@)
  id: ScaleTo``2(``0,osuTK.Vector2,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ScaleTo<T, TEasing>(T, Vector2, double, in TEasing)
  nameWithType: TransformableExtensions.ScaleTo<T, TEasing>(T, Vector2, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ScaleTo<T, TEasing>(T, osuTK.Vector2, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ScaleTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 592
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Scale" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ScaleTo<T, TEasing>(this T drawable, Vector2 newScale, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newScale
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ScaleTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newScale As Vector2, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ScaleTo*
  nameWithType.vb: TransformableExtensions.ScaleTo(Of T, TEasing)(T, Vector2, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ScaleTo(Of T, TEasing)(T, osuTK.Vector2, Double, TEasing)
  name.vb: ScaleTo(Of T, TEasing)(T, Vector2, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeTo``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ResizeTo``2(``0,System.Single,System.Double,``1@)
  id: ResizeTo``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ResizeTo<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.ResizeTo<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeTo<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ResizeTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 601
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Size" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ResizeTo<T, TEasing>(this T drawable, float newSize, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newSize
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ResizeTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newSize As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ResizeTo*
  nameWithType.vb: TransformableExtensions.ResizeTo(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ResizeTo(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: ResizeTo(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeTo``2(``0,osuTK.Vector2,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ResizeTo``2(``0,osuTK.Vector2,System.Double,``1@)
  id: ResizeTo``2(``0,osuTK.Vector2,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ResizeTo<T, TEasing>(T, Vector2, double, in TEasing)
  nameWithType: TransformableExtensions.ResizeTo<T, TEasing>(T, Vector2, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeTo<T, TEasing>(T, osuTK.Vector2, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ResizeTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 610
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Size" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ResizeTo<T, TEasing>(this T drawable, Vector2 newSize, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newSize
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ResizeTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newSize As Vector2, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ResizeTo*
  nameWithType.vb: TransformableExtensions.ResizeTo(Of T, TEasing)(T, Vector2, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ResizeTo(Of T, TEasing)(T, osuTK.Vector2, Double, TEasing)
  name.vb: ResizeTo(Of T, TEasing)(T, Vector2, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo``2(``0,System.Single,System.Double,``1@)
  id: ResizeWidthTo``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ResizeWidthTo<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.ResizeWidthTo<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ResizeWidthTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 619
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Width" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ResizeWidthTo<T, TEasing>(this T drawable, float newWidth, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newWidth
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ResizeWidthTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newWidth As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo*
  nameWithType.vb: TransformableExtensions.ResizeWidthTo(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: ResizeWidthTo(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo``2(``0,System.Single,System.Double,``1@)
  id: ResizeHeightTo``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: ResizeHeightTo<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.ResizeHeightTo<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: ResizeHeightTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 628
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Height" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> ResizeHeightTo<T, TEasing>(this T drawable, float newHeight, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newHeight
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function ResizeHeightTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newHeight As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo*
  nameWithType.vb: TransformableExtensions.ResizeHeightTo(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: ResizeHeightTo(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveTo``2(``0,osuTK.Vector2,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveTo``2(``0,osuTK.Vector2,System.Double,``1@)
  id: MoveTo``2(``0,osuTK.Vector2,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveTo<T, TEasing>(T, Vector2, double, in TEasing)
  nameWithType: TransformableExtensions.MoveTo<T, TEasing>(T, Vector2, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveTo<T, TEasing>(T, osuTK.Vector2, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 637
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Position" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveTo<T, TEasing>(this T drawable, Vector2 newPosition, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: newPosition
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, newPosition As Vector2, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveTo*
  nameWithType.vb: TransformableExtensions.MoveTo(Of T, TEasing)(T, Vector2, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveTo(Of T, TEasing)(T, osuTK.Vector2, Double, TEasing)
  name.vb: MoveTo(Of T, TEasing)(T, Vector2, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveTo``2(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveTo``2(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,``1@)
  id: MoveTo``2(``0,osu.Framework.Graphics.Direction,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveTo<T, TEasing>(T, Direction, float, double, in TEasing)
  nameWithType: TransformableExtensions.MoveTo<T, TEasing>(T, Direction, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveTo<T, TEasing>(T, osu.Framework.Graphics.Direction, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 646
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.X" data-throw-if-not-resolved="false"></xref> or <xref href="osu.Framework.Graphics.Drawable.Y" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveTo<T, TEasing>(this T drawable, Direction direction, float destination, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: direction
      type: osu.Framework.Graphics.Direction
    - id: destination
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveTo(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, direction As Direction, destination As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveTo*
  nameWithType.vb: TransformableExtensions.MoveTo(Of T, TEasing)(T, Direction, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveTo(Of T, TEasing)(T, osu.Framework.Graphics.Direction, Single, Double, TEasing)
  name.vb: MoveTo(Of T, TEasing)(T, Direction, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToX``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveToX``2(``0,System.Single,System.Double,``1@)
  id: MoveToX``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveToX<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.MoveToX<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToX<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveToX
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 666
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.X" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveToX<T, TEasing>(this T drawable, float destination, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: destination
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveToX(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, destination As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveToX*
  nameWithType.vb: TransformableExtensions.MoveToX(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveToX(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: MoveToX(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToY``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveToY``2(``0,System.Single,System.Double,``1@)
  id: MoveToY``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveToY<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.MoveToY<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToY<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveToY
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 675
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Y" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveToY<T, TEasing>(this T drawable, float destination, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: destination
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveToY(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, destination As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveToY*
  nameWithType.vb: TransformableExtensions.MoveToY(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveToY(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: MoveToY(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToOffset``2(``0,osuTK.Vector2,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.MoveToOffset``2(``0,osuTK.Vector2,System.Double,``1@)
  id: MoveToOffset``2(``0,osuTK.Vector2,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: MoveToOffset<T, TEasing>(T, Vector2, double, in TEasing)
  nameWithType: TransformableExtensions.MoveToOffset<T, TEasing>(T, Vector2, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToOffset<T, TEasing>(T, osuTK.Vector2, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: MoveToOffset
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 684
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Drawable.Position" data-throw-if-not-resolved="false"></xref> by an offset to its final value over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> MoveToOffset<T, TEasing>(this T drawable, Vector2 offset, double duration, in TEasing easing) where T : Drawable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: offset
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function MoveToOffset(Of T As Drawable, TEasing As IEasingFunction)(drawable As T, offset As Vector2, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.MoveToOffset*
  nameWithType.vb: TransformableExtensions.MoveToOffset(Of T, TEasing)(T, Vector2, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.MoveToOffset(Of T, TEasing)(T, osuTK.Vector2, Double, TEasing)
  name.vb: MoveToOffset(Of T, TEasing)(T, Vector2, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo``2(``0,osuTK.Vector2,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo``2(``0,osuTK.Vector2,System.Double,``1@)
  id: TransformRelativeChildSizeTo``2(``0,osuTK.Vector2,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformRelativeChildSizeTo<T, TEasing>(T, Vector2, double, in TEasing)
  nameWithType: TransformableExtensions.TransformRelativeChildSizeTo<T, TEasing>(T, Vector2, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo<T, TEasing>(T, osuTK.Vector2, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformRelativeChildSizeTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 693
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Containers.IContainer.RelativeChildSize" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TransformRelativeChildSizeTo<T, TEasing>(this T container, Vector2 newSize, double duration, in TEasing easing) where T : class, IContainer where TEasing : IEasingFunction'
    parameters:
    - id: container
      type: '{T}'
    - id: newSize
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformRelativeChildSizeTo(Of T As {Class, IContainer}, TEasing As IEasingFunction)(container As T, newSize As Vector2, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo*
  nameWithType.vb: TransformableExtensions.TransformRelativeChildSizeTo(Of T, TEasing)(T, Vector2, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo(Of T, TEasing)(T, osuTK.Vector2, Double, TEasing)
  name.vb: TransformRelativeChildSizeTo(Of T, TEasing)(T, Vector2, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo``2(``0,osuTK.Vector2,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo``2(``0,osuTK.Vector2,System.Double,``1@)
  id: TransformRelativeChildOffsetTo``2(``0,osuTK.Vector2,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformRelativeChildOffsetTo<T, TEasing>(T, Vector2, double, in TEasing)
  nameWithType: TransformableExtensions.TransformRelativeChildOffsetTo<T, TEasing>(T, Vector2, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo<T, TEasing>(T, osuTK.Vector2, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformRelativeChildOffsetTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 707
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TransformRelativeChildOffsetTo<T, TEasing>(this T container, Vector2 newOffset, double duration, in TEasing easing) where T : class, IContainer where TEasing : IEasingFunction'
    parameters:
    - id: container
      type: '{T}'
    - id: newOffset
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformRelativeChildOffsetTo(Of T As {Class, IContainer}, TEasing As IEasingFunction)(container As T, newOffset As Vector2, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo*
  nameWithType.vb: TransformableExtensions.TransformRelativeChildOffsetTo(Of T, TEasing)(T, Vector2, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo(Of T, TEasing)(T, osuTK.Vector2, Double, TEasing)
  name.vb: TransformRelativeChildOffsetTo(Of T, TEasing)(T, Vector2, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.BlurTo``2(``0,osuTK.Vector2,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.BlurTo``2(``0,osuTK.Vector2,System.Double,``1@)
  id: BlurTo``2(``0,osuTK.Vector2,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: BlurTo<T, TEasing>(T, Vector2, double, in TEasing)
  nameWithType: TransformableExtensions.BlurTo<T, TEasing>(T, Vector2, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.BlurTo<T, TEasing>(T, osuTK.Vector2, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: BlurTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 716
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> BlurTo<T, TEasing>(this T bufferedContainer, Vector2 newBlurSigma, double duration, in TEasing easing) where T : class, IBufferedContainer where TEasing : IEasingFunction'
    parameters:
    - id: bufferedContainer
      type: '{T}'
    - id: newBlurSigma
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function BlurTo(Of T As {Class, IBufferedContainer}, TEasing As IEasingFunction)(bufferedContainer As T, newBlurSigma As Vector2, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.BlurTo*
  nameWithType.vb: TransformableExtensions.BlurTo(Of T, TEasing)(T, Vector2, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.BlurTo(Of T, TEasing)(T, osuTK.Vector2, Double, TEasing)
  name.vb: BlurTo(Of T, TEasing)(T, Vector2, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo``2(``0,osuTK.Vector2,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo``2(``0,osuTK.Vector2,System.Double,``1@)
  id: TransformSpacingTo``2(``0,osuTK.Vector2,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformSpacingTo<T, TEasing>(T, Vector2, double, in TEasing)
  nameWithType: TransformableExtensions.TransformSpacingTo<T, TEasing>(T, Vector2, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo<T, TEasing>(T, osuTK.Vector2, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformSpacingTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 725
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts <xref href="osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TransformSpacingTo<T, TEasing>(this T flowContainer, Vector2 newSpacing, double duration, in TEasing easing) where T : class, IFillFlowContainer where TEasing : IEasingFunction'
    parameters:
    - id: flowContainer
      type: '{T}'
    - id: newSpacing
      type: osuTK.Vector2
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformSpacingTo(Of T As {Class, IFillFlowContainer}, TEasing As IEasingFunction)(flowContainer As T, newSpacing As Vector2, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo*
  nameWithType.vb: TransformableExtensions.TransformSpacingTo(Of T, TEasing)(T, Vector2, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo(Of T, TEasing)(T, osuTK.Vector2, Double, TEasing)
  name.vb: TransformSpacingTo(Of T, TEasing)(T, Vector2, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``2(``0,System.Single,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``2(``0,System.Single,System.Double,``1@)
  id: FadeEdgeEffectTo``2(``0,System.Single,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeEdgeEffectTo<T, TEasing>(T, float, double, in TEasing)
  nameWithType: TransformableExtensions.FadeEdgeEffectTo<T, TEasing>(T, float, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo<T, TEasing>(T, float, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeEdgeEffectTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 734
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts the alpha channel of the colour of <xref href="osu.Framework.Graphics.Containers.IContainer.EdgeEffect" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeEdgeEffectTo<T, TEasing>(this T container, float newAlpha, double duration, in TEasing easing) where T : class, IContainer where TEasing : IEasingFunction'
    parameters:
    - id: container
      type: '{T}'
    - id: newAlpha
      type: System.Single
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeEdgeEffectTo(Of T As {Class, IContainer}, TEasing As IEasingFunction)(container As T, newAlpha As Single, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo*
  nameWithType.vb: TransformableExtensions.FadeEdgeEffectTo(Of T, TEasing)(T, Single, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo(Of T, TEasing)(T, Single, Double, TEasing)
  name.vb: FadeEdgeEffectTo(Of T, TEasing)(T, Single, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``2(``0,osuTK.Graphics.Color4,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo``2(``0,osuTK.Graphics.Color4,System.Double,``1@)
  id: FadeEdgeEffectTo``2(``0,osuTK.Graphics.Color4,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: FadeEdgeEffectTo<T, TEasing>(T, Color4, double, in TEasing)
  nameWithType: TransformableExtensions.FadeEdgeEffectTo<T, TEasing>(T, Color4, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo<T, TEasing>(T, osuTK.Graphics.Color4, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: FadeEdgeEffectTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 747
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts the colour of <xref href="osu.Framework.Graphics.Containers.IContainer.EdgeEffect" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> FadeEdgeEffectTo<T, TEasing>(this T container, Color4 newColour, double duration, in TEasing easing) where T : class, IContainer where TEasing : IEasingFunction'
    parameters:
    - id: container
      type: '{T}'
    - id: newColour
      type: osuTK.Graphics.Color4
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function FadeEdgeEffectTo(Of T As {Class, IContainer}, TEasing As IEasingFunction)(container As T, newColour As Color4, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo*
  nameWithType.vb: TransformableExtensions.FadeEdgeEffectTo(Of T, TEasing)(T, Color4, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo(Of T, TEasing)(T, osuTK.Graphics.Color4, Double, TEasing)
  name.vb: FadeEdgeEffectTo(Of T, TEasing)(T, Color4, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo``2(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo``2(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,``1@)
  id: TweenEdgeEffectTo``2(``0,osu.Framework.Graphics.Effects.EdgeEffectParameters,System.Double,``1@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TweenEdgeEffectTo<T, TEasing>(T, EdgeEffectParameters, double, in TEasing)
  nameWithType: TransformableExtensions.TweenEdgeEffectTo<T, TEasing>(T, EdgeEffectParameters, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo<T, TEasing>(T, osu.Framework.Graphics.Effects.EdgeEffectParameters, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TweenEdgeEffectTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 760
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts all parameters of <xref href="osu.Framework.Graphics.Containers.IContainer.EdgeEffect" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TweenEdgeEffectTo<T, TEasing>(this T container, EdgeEffectParameters newParameters, double duration, in TEasing easing) where T : class, IContainer where TEasing : IEasingFunction'
    parameters:
    - id: container
      type: '{T}'
    - id: newParameters
      type: osu.Framework.Graphics.Effects.EdgeEffectParameters
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TweenEdgeEffectTo(Of T As {Class, IContainer}, TEasing As IEasingFunction)(container As T, newParameters As EdgeEffectParameters, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo*
  nameWithType.vb: TransformableExtensions.TweenEdgeEffectTo(Of T, TEasing)(T, EdgeEffectParameters, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo(Of T, TEasing)(T, osu.Framework.Graphics.Effects.EdgeEffectParameters, Double, TEasing)
  name.vb: TweenEdgeEffectTo(Of T, TEasing)(T, EdgeEffectParameters, Double, TEasing)
- uid: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo``3(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,``2@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.TransformBindableTo``3(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,``2@)
  id: TransformBindableTo``3(``0,osu.Framework.Bindables.Bindable{``1},``1,System.Double,``2@)
  isExtensionMethod: true
  parent: osu.Framework.Graphics.TransformableExtensions
  langs:
  - csharp
  - vb
  name: TransformBindableTo<T, TValue, TEasing>(T, Bindable<TValue>, TValue, double, in TEasing)
  nameWithType: TransformableExtensions.TransformBindableTo<T, TValue, TEasing>(T, Bindable<TValue>, TValue, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo<T, TValue, TEasing>(T, osu.Framework.Bindables.Bindable<TValue>, TValue, double, in TEasing)
  type: Method
  source:
    remote:
      path: osu.Framework/Graphics/TransformableExtensions.cs
      branch: master
      repo: https://github.com/ppy/osu-framework
    id: TransformBindableTo
    path: osu.Framework/Graphics/TransformableExtensions.cs
    startLine: 769
  assemblies:
  - osu.Framework
  namespace: osu.Framework.Graphics
  summary: Smoothly adjusts the value of a <xref href="osu.Framework.Bindables.Bindable%601" data-throw-if-not-resolved="false"></xref> over time.
  example: []
  syntax:
    content: 'public static TransformSequence<T> TransformBindableTo<T, TValue, TEasing>(this T drawable, Bindable<TValue> bindable, TValue newValue, double duration, in TEasing easing) where T : class, ITransformable where TEasing : IEasingFunction'
    parameters:
    - id: drawable
      type: '{T}'
    - id: bindable
      type: osu.Framework.Bindables.Bindable{{TValue}}
      attributes:
      - type: JetBrains.Annotations.NotNullAttribute
        ctor: JetBrains.Annotations.NotNullAttribute.#ctor
        arguments: []
    - id: newValue
      type: '{TValue}'
    - id: duration
      type: System.Double
    - id: easing
      type: '{TEasing}'
    typeParameters:
    - id: T
    - id: TValue
    - id: TEasing
    return:
      type: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
      description: A <xref href="osu.Framework.Graphics.Transforms.TransformSequence%601" data-throw-if-not-resolved="false"></xref> to which further transforms can be added.
    content.vb: Public Shared Function TransformBindableTo(Of T As {Class, ITransformable}, TValue, TEasing As IEasingFunction)(drawable As T, bindable As Bindable(Of TValue), newValue As TValue, duration As Double, easing As TEasing) As TransformSequence(Of T)
  overload: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo*
  nameWithType.vb: TransformableExtensions.TransformBindableTo(Of T, TValue, TEasing)(T, Bindable(Of TValue), TValue, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo(Of T, TValue, TEasing)(T, osu.Framework.Bindables.Bindable(Of TValue), TValue, Double, TEasing)
  name.vb: TransformBindableTo(Of T, TValue, TEasing)(T, Bindable(Of TValue), TValue, Double, TEasing)
references:
- uid: osu.Framework.Graphics
  commentId: N:osu.Framework.Graphics
  href: osu.html
  name: osu.Framework.Graphics
  nameWithType: osu.Framework.Graphics
  fullName: osu.Framework.Graphics
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: osu.Framework.Graphics.Transforms.ITransformable
  commentId: T:osu.Framework.Graphics.Transforms.ITransformable
  parent: osu.Framework.Graphics.Transforms
  href: osu.Framework.Graphics.Transforms.ITransformable.html
  name: ITransformable
  nameWithType: ITransformable
  fullName: osu.Framework.Graphics.Transforms.ITransformable
- uid: osu.Framework.Graphics.Transforms.Transform`2
  commentId: T:osu.Framework.Graphics.Transforms.Transform`2
  href: osu.Framework.Graphics.Transforms.Transform-2.html
  name: Transform<TValue, T>
  nameWithType: Transform<TValue, T>
  fullName: osu.Framework.Graphics.Transforms.Transform<TValue, T>
  nameWithType.vb: Transform(Of TValue, T)
  fullName.vb: osu.Framework.Graphics.Transforms.Transform(Of TValue, T)
  name.vb: Transform(Of TValue, T)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.Transform`2
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-2.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.Transform`2
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: osu.Framework.Graphics.Transforms.TransformSequence`1
  commentId: T:osu.Framework.Graphics.Transforms.TransformSequence`1
  parent: osu.Framework.Graphics.Transforms
  href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  name: TransformSequence<T>
  nameWithType: TransformSequence<T>
  fullName: osu.Framework.Graphics.Transforms.TransformSequence<T>
  nameWithType.vb: TransformSequence(Of T)
  fullName.vb: osu.Framework.Graphics.Transforms.TransformSequence(Of T)
  name.vb: TransformSequence(Of T)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: osu.Framework.Graphics.TransformableExtensions.TransformTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.TransformTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_TransformTo__2___0_System_String___1_System_Double_osu_Framework_Graphics_Easing_
  name: TransformTo
  nameWithType: TransformableExtensions.TransformTo
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformTo
- uid: '{TThis}'
  commentId: '!:TThis'
  definition: TThis
  name: TThis
  nameWithType: TThis
  fullName: TThis
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: osu.Framework.Graphics.Easing
  commentId: T:osu.Framework.Graphics.Easing
  parent: osu.Framework.Graphics
  href: osu.Framework.Graphics.Easing.html
  name: Easing
  nameWithType: Easing
  fullName: osu.Framework.Graphics.Easing
- uid: osu.Framework.Graphics.Transforms.TransformSequence{{TThis}}
  commentId: T:osu.Framework.Graphics.Transforms.TransformSequence{``0}
  parent: osu.Framework.Graphics.Transforms
  definition: osu.Framework.Graphics.Transforms.TransformSequence`1
  href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  name: TransformSequence<TThis>
  nameWithType: TransformSequence<TThis>
  fullName: osu.Framework.Graphics.Transforms.TransformSequence<TThis>
  nameWithType.vb: TransformSequence(Of TThis)
  fullName.vb: osu.Framework.Graphics.Transforms.TransformSequence(Of TThis)
  name.vb: TransformSequence(Of TThis)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: <
  - name: TThis
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TThis
  - name: )
- uid: osu.Framework.Graphics.Transforms
  commentId: N:osu.Framework.Graphics.Transforms
  href: osu.html
  name: osu.Framework.Graphics.Transforms
  nameWithType: osu.Framework.Graphics.Transforms
  fullName: osu.Framework.Graphics.Transforms
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Transforms
    name: Transforms
    href: osu.Framework.Graphics.Transforms.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Transforms
    name: Transforms
    href: osu.Framework.Graphics.Transforms.html
- uid: TThis
  name: TThis
  nameWithType: TThis
  fullName: TThis
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: '{TEasing}'
  commentId: '!:TEasing'
  definition: TEasing
  name: TEasing
  nameWithType: TEasing
  fullName: TEasing
- uid: TEasing
  name: TEasing
  nameWithType: TEasing
  fullName: TEasing
- uid: osu.Framework.Graphics.Transforms.Transform
  commentId: T:osu.Framework.Graphics.Transforms.Transform
  parent: osu.Framework.Graphics.Transforms
  href: osu.Framework.Graphics.Transforms.Transform.html
  name: Transform
  nameWithType: Transform
  fullName: osu.Framework.Graphics.Transforms.Transform
- uid: osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)
  commentId: M:osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)
  isExternal: true
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_PopulateTransform__3___2_osu_Framework_Graphics_Transforms_Transform___0___1___2____0_System_Double___1__
  name: PopulateTransform<TValue, TEasing, TThis>(TThis, Transform<TValue, TEasing, TThis>, TValue, double, in TEasing)
  nameWithType: TransformableExtensions.PopulateTransform<TValue, TEasing, TThis>(TThis, Transform<TValue, TEasing, TThis>, TValue, double, in TEasing)
  fullName: osu.Framework.Graphics.TransformableExtensions.PopulateTransform<TValue, TEasing, TThis>(TThis, osu.Framework.Graphics.Transforms.Transform<TValue, TEasing, TThis>, TValue, double, in TEasing)
  nameWithType.vb: TransformableExtensions.PopulateTransform(Of TValue, TEasing, TThis)(TThis, Transform(Of TValue, TEasing, TThis), TValue, Double, TEasing)
  fullName.vb: osu.Framework.Graphics.TransformableExtensions.PopulateTransform(Of TValue, TEasing, TThis)(TThis, osu.Framework.Graphics.Transforms.Transform(Of TValue, TEasing, TThis), TValue, Double, TEasing)
  name.vb: PopulateTransform(Of TValue, TEasing, TThis)(TThis, Transform(Of TValue, TEasing, TThis), TValue, Double, TEasing)
  spec.csharp:
  - uid: osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)
    name: PopulateTransform
    href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_PopulateTransform__3___2_osu_Framework_Graphics_Transforms_Transform___0___1___2____0_System_Double___1__
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TEasing
  - name: ','
  - name: " "
  - name: TThis
  - name: '>'
  - name: (
  - name: TThis
  - name: ','
  - name: " "
  - uid: osu.Framework.Graphics.Transforms.Transform`3
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-3.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TEasing
  - name: ','
  - name: " "
  - name: TThis
  - name: '>'
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - name: TEasing
  - name: )
  spec.vb:
  - uid: osu.Framework.Graphics.TransformableExtensions.PopulateTransform``3(``2,osu.Framework.Graphics.Transforms.Transform{``0,``1,``2},``0,System.Double,``1@)
    name: PopulateTransform
    href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_PopulateTransform__3___2_osu_Framework_Graphics_Transforms_Transform___0___1___2____0_System_Double___1__
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TEasing
  - name: ','
  - name: " "
  - name: TThis
  - name: )
  - name: (
  - name: TThis
  - name: ','
  - name: " "
  - uid: osu.Framework.Graphics.Transforms.Transform`3
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TEasing
  - name: ','
  - name: " "
  - name: TThis
  - name: )
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - name: TEasing
  - name: )
- uid: osu.Framework.Graphics.TransformableExtensions.MakeTransform*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.MakeTransform
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_MakeTransform__2___0_System_String___1_System_Double_osu_Framework_Graphics_Easing_System_String_
  name: MakeTransform
  nameWithType: TransformableExtensions.MakeTransform
  fullName: osu.Framework.Graphics.TransformableExtensions.MakeTransform
- uid: osu.Framework.Graphics.Transforms.Transform{{TValue},osu.Framework.Graphics.Transforms.DefaultEasingFunction,{TThis}}
  commentId: T:osu.Framework.Graphics.Transforms.Transform{``1,osu.Framework.Graphics.Transforms.DefaultEasingFunction,``0}
  parent: osu.Framework.Graphics.Transforms
  definition: osu.Framework.Graphics.Transforms.Transform`3
  href: osu.Framework.Graphics.Transforms.Transform-3.html
  name: Transform<TValue, DefaultEasingFunction, TThis>
  nameWithType: Transform<TValue, DefaultEasingFunction, TThis>
  fullName: osu.Framework.Graphics.Transforms.Transform<TValue, osu.Framework.Graphics.Transforms.DefaultEasingFunction, TThis>
  nameWithType.vb: Transform(Of TValue, DefaultEasingFunction, TThis)
  fullName.vb: osu.Framework.Graphics.Transforms.Transform(Of TValue, osu.Framework.Graphics.Transforms.DefaultEasingFunction, TThis)
  name.vb: Transform(Of TValue, DefaultEasingFunction, TThis)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.Transform`3
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-3.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - uid: osu.Framework.Graphics.Transforms.DefaultEasingFunction
    name: DefaultEasingFunction
    href: osu.Framework.Graphics.Transforms.DefaultEasingFunction.html
  - name: ','
  - name: " "
  - name: TThis
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.Transform`3
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: osu.Framework.Graphics.Transforms.DefaultEasingFunction
    name: DefaultEasingFunction
    href: osu.Framework.Graphics.Transforms.DefaultEasingFunction.html
  - name: ','
  - name: " "
  - name: TThis
  - name: )
- uid: osu.Framework.Graphics.Transforms.Transform`3
  commentId: T:osu.Framework.Graphics.Transforms.Transform`3
  href: osu.Framework.Graphics.Transforms.Transform-3.html
  name: Transform<TValue, TEasing, T>
  nameWithType: Transform<TValue, TEasing, T>
  fullName: osu.Framework.Graphics.Transforms.Transform<TValue, TEasing, T>
  nameWithType.vb: Transform(Of TValue, TEasing, T)
  fullName.vb: osu.Framework.Graphics.Transforms.Transform(Of TValue, TEasing, T)
  name.vb: Transform(Of TValue, TEasing, T)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.Transform`3
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-3.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TEasing
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.Transform`3
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TEasing
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: osu.Framework.Graphics.Transforms.Transform{{TValue},{TEasing},{TThis}}
  commentId: T:osu.Framework.Graphics.Transforms.Transform{``2,``1,``0}
  parent: osu.Framework.Graphics.Transforms
  definition: osu.Framework.Graphics.Transforms.Transform`3
  href: osu.Framework.Graphics.Transforms.Transform-3.html
  name: Transform<TValue, TEasing, TThis>
  nameWithType: Transform<TValue, TEasing, TThis>
  fullName: osu.Framework.Graphics.Transforms.Transform<TValue, TEasing, TThis>
  nameWithType.vb: Transform(Of TValue, TEasing, TThis)
  fullName.vb: osu.Framework.Graphics.Transforms.Transform(Of TValue, TEasing, TThis)
  name.vb: Transform(Of TValue, TEasing, TThis)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.Transform`3
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-3.html
  - name: <
  - name: TValue
  - name: ','
  - name: " "
  - name: TEasing
  - name: ','
  - name: " "
  - name: TThis
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.Transform`3
    name: Transform
    href: osu.Framework.Graphics.Transforms.Transform-3.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TEasing
  - name: ','
  - name: " "
  - name: TThis
  - name: )
- uid: osu.Framework.Graphics.TransformableExtensions.PopulateTransform*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.PopulateTransform
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_PopulateTransform__2___1_osu_Framework_Graphics_Transforms_Transform___0_osu_Framework_Graphics_Transforms_DefaultEasingFunction___1____0_System_Double_osu_Framework_Graphics_Easing_
  name: PopulateTransform
  nameWithType: TransformableExtensions.PopulateTransform
  fullName: osu.Framework.Graphics.TransformableExtensions.PopulateTransform
- uid: osu.Framework.Graphics.TransformableExtensions.Animate*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.Animate
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_Animate__1___0_osu_Framework_Graphics_Transforms_TransformSequence___0__Generator___
  name: Animate
  nameWithType: TransformableExtensions.Animate
  fullName: osu.Framework.Graphics.TransformableExtensions.Animate
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: osu.Framework.Graphics.Transforms.TransformSequence{{T}}.Generator[]
  isExternal: true
  href: osu.Framework.Graphics.Transforms.TransformSequence-1.Generator.html
  name: Generator[]
  nameWithType: TransformSequence<T>.Generator[]
  fullName: osu.Framework.Graphics.Transforms.TransformSequence<T>.Generator[]
  nameWithType.vb: TransformSequence(Of T).Generator()
  fullName.vb: osu.Framework.Graphics.Transforms.TransformSequence(Of T).Generator()
  name.vb: Generator()
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator
    name: Generator
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.Generator.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence{``0}.Generator
    name: Generator
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.Generator.html
  - name: (
  - name: )
- uid: osu.Framework.Graphics.Transforms.TransformSequence{{T}}
  commentId: T:osu.Framework.Graphics.Transforms.TransformSequence{``0}
  parent: osu.Framework.Graphics.Transforms
  definition: osu.Framework.Graphics.Transforms.TransformSequence`1
  href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  name: TransformSequence<T>
  nameWithType: TransformSequence<T>
  fullName: osu.Framework.Graphics.Transforms.TransformSequence<T>
  nameWithType.vb: TransformSequence(Of T)
  fullName.vb: osu.Framework.Graphics.Transforms.TransformSequence(Of T)
  name.vb: TransformSequence(Of T)
  spec.csharp:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Graphics.Transforms.TransformSequence`1
    name: TransformSequence
    href: osu.Framework.Graphics.Transforms.TransformSequence-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: osu.Framework.Graphics.TransformableExtensions.Delay*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.Delay
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_Delay__1___0_System_Double_osu_Framework_Graphics_Transforms_TransformSequence___0__Generator___
  name: Delay
  nameWithType: TransformableExtensions.Delay
  fullName: osu.Framework.Graphics.TransformableExtensions.Delay
- uid: osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_DelayUntilTransformsFinished__1___0_
  name: DelayUntilTransformsFinished
  nameWithType: TransformableExtensions.DelayUntilTransformsFinished
  fullName: osu.Framework.Graphics.TransformableExtensions.DelayUntilTransformsFinished
- uid: osu.Framework.Graphics.TransformableExtensions.Loop*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.Loop
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_Loop__1___0_System_Double_System_Int32_osu_Framework_Graphics_Transforms_TransformSequence___0__Generator___
  name: Loop
  nameWithType: TransformableExtensions.Loop
  fullName: osu.Framework.Graphics.TransformableExtensions.Loop
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: osu.Framework.Graphics.TransformableExtensions.Spin*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.Spin
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_Spin__1___0_System_Double_osu_Framework_Graphics_RotationDirection_System_Single_
  name: Spin
  nameWithType: TransformableExtensions.Spin
  fullName: osu.Framework.Graphics.TransformableExtensions.Spin
- uid: osu.Framework.Graphics.RotationDirection
  commentId: T:osu.Framework.Graphics.RotationDirection
  parent: osu.Framework.Graphics
  href: osu.Framework.Graphics.RotationDirection.html
  name: RotationDirection
  nameWithType: RotationDirection
  fullName: osu.Framework.Graphics.RotationDirection
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: osu.Framework.Graphics.Drawable.Alpha
  commentId: P:osu.Framework.Graphics.Drawable.Alpha
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Alpha
  name: Alpha
  nameWithType: Drawable.Alpha
  fullName: osu.Framework.Graphics.Drawable.Alpha
- uid: osu.Framework.Graphics.TransformableExtensions.FadeIn*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.FadeIn
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_FadeIn__1___0_System_Double_osu_Framework_Graphics_Easing_
  name: FadeIn
  nameWithType: TransformableExtensions.FadeIn
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeIn
- uid: osu.Framework.Graphics.Drawable
  commentId: T:osu.Framework.Graphics.Drawable
  parent: osu.Framework.Graphics
  href: osu.Framework.Graphics.Drawable.html
  name: Drawable
  nameWithType: Drawable
  fullName: osu.Framework.Graphics.Drawable
- uid: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.FadeInFromZero
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_FadeInFromZero__1___0_System_Double_osu_Framework_Graphics_Easing_
  name: FadeInFromZero
  nameWithType: TransformableExtensions.FadeInFromZero
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeInFromZero
- uid: osu.Framework.Graphics.TransformableExtensions.FadeOut*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.FadeOut
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_FadeOut__1___0_System_Double_osu_Framework_Graphics_Easing_
  name: FadeOut
  nameWithType: TransformableExtensions.FadeOut
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeOut
- uid: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_FadeOutFromOne__1___0_System_Double_osu_Framework_Graphics_Easing_
  name: FadeOutFromOne
  nameWithType: TransformableExtensions.FadeOutFromOne
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeOutFromOne
- uid: osu.Framework.Graphics.TransformableExtensions.FadeTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.FadeTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_FadeTo__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: FadeTo
  nameWithType: TransformableExtensions.FadeTo
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeTo
- uid: osu.Framework.Graphics.Drawable.Colour
  commentId: P:osu.Framework.Graphics.Drawable.Colour
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Colour
  name: Colour
  nameWithType: Drawable.Colour
  fullName: osu.Framework.Graphics.Drawable.Colour
- uid: osu.Framework.Graphics.TransformableExtensions.FadeColour*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.FadeColour
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_FadeColour__1___0_osu_Framework_Graphics_Colour_ColourInfo_System_Double_osu_Framework_Graphics_Easing_
  name: FadeColour
  nameWithType: TransformableExtensions.FadeColour
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeColour
- uid: osu.Framework.Graphics.Colour.ColourInfo
  commentId: T:osu.Framework.Graphics.Colour.ColourInfo
  parent: osu.Framework.Graphics.Colour
  href: osu.Framework.Graphics.Colour.ColourInfo.html
  name: ColourInfo
  nameWithType: ColourInfo
  fullName: osu.Framework.Graphics.Colour.ColourInfo
- uid: osu.Framework.Graphics.Colour
  commentId: N:osu.Framework.Graphics.Colour
  href: osu.html
  name: osu.Framework.Graphics.Colour
  nameWithType: osu.Framework.Graphics.Colour
  fullName: osu.Framework.Graphics.Colour
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Colour
    name: Colour
    href: osu.Framework.Graphics.Colour.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Colour
    name: Colour
    href: osu.Framework.Graphics.Colour.html
- uid: osu.Framework.Graphics.TransformableExtensions.FlashColour*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.FlashColour
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_FlashColour__1___0_osu_Framework_Graphics_Colour_ColourInfo_System_Double_osu_Framework_Graphics_Easing_
  name: FlashColour
  nameWithType: TransformableExtensions.FlashColour
  fullName: osu.Framework.Graphics.TransformableExtensions.FlashColour
- uid: osu.Framework.Graphics.Drawable.Rotation
  commentId: P:osu.Framework.Graphics.Drawable.Rotation
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Rotation
  name: Rotation
  nameWithType: Drawable.Rotation
  fullName: osu.Framework.Graphics.Drawable.Rotation
- uid: osu.Framework.Graphics.TransformableExtensions.RotateTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.RotateTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_RotateTo__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: RotateTo
  nameWithType: TransformableExtensions.RotateTo
  fullName: osu.Framework.Graphics.TransformableExtensions.RotateTo
- uid: osu.Framework.Graphics.Drawable.Scale
  commentId: P:osu.Framework.Graphics.Drawable.Scale
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Scale
  name: Scale
  nameWithType: Drawable.Scale
  fullName: osu.Framework.Graphics.Drawable.Scale
- uid: osu.Framework.Graphics.TransformableExtensions.ScaleTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.ScaleTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_ScaleTo__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: ScaleTo
  nameWithType: TransformableExtensions.ScaleTo
  fullName: osu.Framework.Graphics.TransformableExtensions.ScaleTo
- uid: osuTK.Vector2
  commentId: T:osuTK.Vector2
  parent: osuTK
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: osuTK.Vector2
- uid: osuTK
  commentId: N:osuTK
  isExternal: true
  name: osuTK
  nameWithType: osuTK
  fullName: osuTK
- uid: osu.Framework.Graphics.Drawable.Size
  commentId: P:osu.Framework.Graphics.Drawable.Size
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Size
  name: Size
  nameWithType: Drawable.Size
  fullName: osu.Framework.Graphics.Drawable.Size
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.ResizeTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_ResizeTo__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: ResizeTo
  nameWithType: TransformableExtensions.ResizeTo
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeTo
- uid: osu.Framework.Graphics.Drawable.Width
  commentId: P:osu.Framework.Graphics.Drawable.Width
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Width
  name: Width
  nameWithType: Drawable.Width
  fullName: osu.Framework.Graphics.Drawable.Width
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_ResizeWidthTo__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: ResizeWidthTo
  nameWithType: TransformableExtensions.ResizeWidthTo
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeWidthTo
- uid: osu.Framework.Graphics.Drawable.Height
  commentId: P:osu.Framework.Graphics.Drawable.Height
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Height
  name: Height
  nameWithType: Drawable.Height
  fullName: osu.Framework.Graphics.Drawable.Height
- uid: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_ResizeHeightTo__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: ResizeHeightTo
  nameWithType: TransformableExtensions.ResizeHeightTo
  fullName: osu.Framework.Graphics.TransformableExtensions.ResizeHeightTo
- uid: osu.Framework.Graphics.Drawable.Position
  commentId: P:osu.Framework.Graphics.Drawable.Position
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Position
  name: Position
  nameWithType: Drawable.Position
  fullName: osu.Framework.Graphics.Drawable.Position
- uid: osu.Framework.Graphics.TransformableExtensions.MoveTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.MoveTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_MoveTo__1___0_osuTK_Vector2_System_Double_osu_Framework_Graphics_Easing_
  name: MoveTo
  nameWithType: TransformableExtensions.MoveTo
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveTo
- uid: osu.Framework.Graphics.Drawable.X
  commentId: P:osu.Framework.Graphics.Drawable.X
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_X
  name: X
  nameWithType: Drawable.X
  fullName: osu.Framework.Graphics.Drawable.X
- uid: osu.Framework.Graphics.Drawable.Y
  commentId: P:osu.Framework.Graphics.Drawable.Y
  parent: osu.Framework.Graphics.Drawable
  href: osu.Framework.Graphics.Drawable.html#osu_Framework_Graphics_Drawable_Y
  name: Y
  nameWithType: Drawable.Y
  fullName: osu.Framework.Graphics.Drawable.Y
- uid: osu.Framework.Graphics.Direction
  commentId: T:osu.Framework.Graphics.Direction
  parent: osu.Framework.Graphics
  href: osu.Framework.Graphics.Direction.html
  name: Direction
  nameWithType: Direction
  fullName: osu.Framework.Graphics.Direction
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToX*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.MoveToX
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_MoveToX__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: MoveToX
  nameWithType: TransformableExtensions.MoveToX
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToX
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToY*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.MoveToY
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_MoveToY__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: MoveToY
  nameWithType: TransformableExtensions.MoveToY
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToY
- uid: osu.Framework.Graphics.TransformableExtensions.MoveToOffset*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.MoveToOffset
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_MoveToOffset__1___0_osuTK_Vector2_System_Double_osu_Framework_Graphics_Easing_
  name: MoveToOffset
  nameWithType: TransformableExtensions.MoveToOffset
  fullName: osu.Framework.Graphics.TransformableExtensions.MoveToOffset
- uid: osu.Framework.Graphics.Containers.IContainer.RelativeChildSize
  commentId: P:osu.Framework.Graphics.Containers.IContainer.RelativeChildSize
  parent: osu.Framework.Graphics.Containers.IContainer
  href: osu.Framework.Graphics.Containers.IContainer.html#osu_Framework_Graphics_Containers_IContainer_RelativeChildSize
  name: RelativeChildSize
  nameWithType: IContainer.RelativeChildSize
  fullName: osu.Framework.Graphics.Containers.IContainer.RelativeChildSize
- uid: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_TransformRelativeChildSizeTo__1___0_osuTK_Vector2_System_Double_osu_Framework_Graphics_Easing_
  name: TransformRelativeChildSizeTo
  nameWithType: TransformableExtensions.TransformRelativeChildSizeTo
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildSizeTo
- uid: osu.Framework.Graphics.Containers.IContainer
  commentId: T:osu.Framework.Graphics.Containers.IContainer
  parent: osu.Framework.Graphics.Containers
  href: osu.Framework.Graphics.Containers.IContainer.html
  name: IContainer
  nameWithType: IContainer
  fullName: osu.Framework.Graphics.Containers.IContainer
- uid: osu.Framework.Graphics.Containers
  commentId: N:osu.Framework.Graphics.Containers
  href: osu.html
  name: osu.Framework.Graphics.Containers
  nameWithType: osu.Framework.Graphics.Containers
  fullName: osu.Framework.Graphics.Containers
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Containers
    name: Containers
    href: osu.Framework.Graphics.Containers.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Containers
    name: Containers
    href: osu.Framework.Graphics.Containers.html
- uid: osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset
  commentId: P:osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset
  parent: osu.Framework.Graphics.Containers.IContainer
  href: osu.Framework.Graphics.Containers.IContainer.html#osu_Framework_Graphics_Containers_IContainer_RelativeChildOffset
  name: RelativeChildOffset
  nameWithType: IContainer.RelativeChildOffset
  fullName: osu.Framework.Graphics.Containers.IContainer.RelativeChildOffset
- uid: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_TransformRelativeChildOffsetTo__1___0_osuTK_Vector2_System_Double_osu_Framework_Graphics_Easing_
  name: TransformRelativeChildOffsetTo
  nameWithType: TransformableExtensions.TransformRelativeChildOffsetTo
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformRelativeChildOffsetTo
- uid: osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma
  commentId: P:osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma
  parent: osu.Framework.Graphics.Containers.IBufferedContainer
  href: osu.Framework.Graphics.Containers.IBufferedContainer.html#osu_Framework_Graphics_Containers_IBufferedContainer_BlurSigma
  name: BlurSigma
  nameWithType: IBufferedContainer.BlurSigma
  fullName: osu.Framework.Graphics.Containers.IBufferedContainer.BlurSigma
- uid: osu.Framework.Graphics.TransformableExtensions.BlurTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.BlurTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_BlurTo__1___0_osuTK_Vector2_System_Double_osu_Framework_Graphics_Easing_
  name: BlurTo
  nameWithType: TransformableExtensions.BlurTo
  fullName: osu.Framework.Graphics.TransformableExtensions.BlurTo
- uid: osu.Framework.Graphics.Containers.IBufferedContainer
  commentId: T:osu.Framework.Graphics.Containers.IBufferedContainer
  parent: osu.Framework.Graphics.Containers
  href: osu.Framework.Graphics.Containers.IBufferedContainer.html
  name: IBufferedContainer
  nameWithType: IBufferedContainer
  fullName: osu.Framework.Graphics.Containers.IBufferedContainer
- uid: osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing
  commentId: P:osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing
  parent: osu.Framework.Graphics.Containers.IFillFlowContainer
  href: osu.Framework.Graphics.Containers.IFillFlowContainer.html#osu_Framework_Graphics_Containers_IFillFlowContainer_Spacing
  name: Spacing
  nameWithType: IFillFlowContainer.Spacing
  fullName: osu.Framework.Graphics.Containers.IFillFlowContainer.Spacing
- uid: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_TransformSpacingTo__1___0_osuTK_Vector2_System_Double_osu_Framework_Graphics_Easing_
  name: TransformSpacingTo
  nameWithType: TransformableExtensions.TransformSpacingTo
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformSpacingTo
- uid: osu.Framework.Graphics.Containers.IFillFlowContainer
  commentId: T:osu.Framework.Graphics.Containers.IFillFlowContainer
  parent: osu.Framework.Graphics.Containers
  href: osu.Framework.Graphics.Containers.IFillFlowContainer.html
  name: IFillFlowContainer
  nameWithType: IFillFlowContainer
  fullName: osu.Framework.Graphics.Containers.IFillFlowContainer
- uid: osu.Framework.Graphics.Containers.IContainer.EdgeEffect
  commentId: P:osu.Framework.Graphics.Containers.IContainer.EdgeEffect
  parent: osu.Framework.Graphics.Containers.IContainer
  href: osu.Framework.Graphics.Containers.IContainer.html#osu_Framework_Graphics_Containers_IContainer_EdgeEffect
  name: EdgeEffect
  nameWithType: IContainer.EdgeEffect
  fullName: osu.Framework.Graphics.Containers.IContainer.EdgeEffect
- uid: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_FadeEdgeEffectTo__1___0_System_Single_System_Double_osu_Framework_Graphics_Easing_
  name: FadeEdgeEffectTo
  nameWithType: TransformableExtensions.FadeEdgeEffectTo
  fullName: osu.Framework.Graphics.TransformableExtensions.FadeEdgeEffectTo
- uid: osuTK.Graphics.Color4
  commentId: T:osuTK.Graphics.Color4
  parent: osuTK.Graphics
  isExternal: true
  name: Color4
  nameWithType: Color4
  fullName: osuTK.Graphics.Color4
- uid: osuTK.Graphics
  commentId: N:osuTK.Graphics
  isExternal: true
  name: osuTK.Graphics
  nameWithType: osuTK.Graphics
  fullName: osuTK.Graphics
  spec.csharp:
  - uid: osuTK
    name: osuTK
    isExternal: true
  - name: .
  - uid: osuTK.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: osuTK
    name: osuTK
    isExternal: true
  - name: .
  - uid: osuTK.Graphics
    name: Graphics
    isExternal: true
- uid: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_TweenEdgeEffectTo__1___0_osu_Framework_Graphics_Effects_EdgeEffectParameters_System_Double_osu_Framework_Graphics_Easing_
  name: TweenEdgeEffectTo
  nameWithType: TransformableExtensions.TweenEdgeEffectTo
  fullName: osu.Framework.Graphics.TransformableExtensions.TweenEdgeEffectTo
- uid: osu.Framework.Graphics.Effects.EdgeEffectParameters
  commentId: T:osu.Framework.Graphics.Effects.EdgeEffectParameters
  parent: osu.Framework.Graphics.Effects
  href: osu.Framework.Graphics.Effects.EdgeEffectParameters.html
  name: EdgeEffectParameters
  nameWithType: EdgeEffectParameters
  fullName: osu.Framework.Graphics.Effects.EdgeEffectParameters
- uid: osu.Framework.Graphics.Effects
  commentId: N:osu.Framework.Graphics.Effects
  href: osu.html
  name: osu.Framework.Graphics.Effects
  nameWithType: osu.Framework.Graphics.Effects
  fullName: osu.Framework.Graphics.Effects
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Effects
    name: Effects
    href: osu.Framework.Graphics.Effects.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Graphics
    name: Graphics
    href: osu.Framework.Graphics.html
  - name: .
  - uid: osu.Framework.Graphics.Effects
    name: Effects
    href: osu.Framework.Graphics.Effects.html
- uid: osu.Framework.Bindables.Bindable`1
  commentId: T:osu.Framework.Bindables.Bindable`1
  parent: osu.Framework.Bindables
  href: osu.Framework.Bindables.Bindable-1.html
  name: Bindable<T>
  nameWithType: Bindable<T>
  fullName: osu.Framework.Bindables.Bindable<T>
  nameWithType.vb: Bindable(Of T)
  fullName.vb: osu.Framework.Bindables.Bindable(Of T)
  name.vb: Bindable(Of T)
  spec.csharp:
  - uid: osu.Framework.Bindables.Bindable`1
    name: Bindable
    href: osu.Framework.Bindables.Bindable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Bindables.Bindable`1
    name: Bindable
    href: osu.Framework.Bindables.Bindable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo*
  commentId: Overload:osu.Framework.Graphics.TransformableExtensions.TransformBindableTo
  href: osu.Framework.Graphics.TransformableExtensions.html#osu_Framework_Graphics_TransformableExtensions_TransformBindableTo__2___0_osu_Framework_Bindables_Bindable___1____1_System_Double_osu_Framework_Graphics_Easing_
  name: TransformBindableTo
  nameWithType: TransformableExtensions.TransformBindableTo
  fullName: osu.Framework.Graphics.TransformableExtensions.TransformBindableTo
- uid: osu.Framework.Bindables.Bindable{{TValue}}
  commentId: T:osu.Framework.Bindables.Bindable{``0}
  parent: osu.Framework.Bindables
  definition: osu.Framework.Bindables.Bindable`1
  href: osu.Framework.Bindables.Bindable-1.html
  name: Bindable<TValue>
  nameWithType: Bindable<TValue>
  fullName: osu.Framework.Bindables.Bindable<TValue>
  nameWithType.vb: Bindable(Of TValue)
  fullName.vb: osu.Framework.Bindables.Bindable(Of TValue)
  name.vb: Bindable(Of TValue)
  spec.csharp:
  - uid: osu.Framework.Bindables.Bindable`1
    name: Bindable
    href: osu.Framework.Bindables.Bindable-1.html
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: osu.Framework.Bindables.Bindable`1
    name: Bindable
    href: osu.Framework.Bindables.Bindable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: osu.Framework.Bindables
  commentId: N:osu.Framework.Bindables
  href: osu.html
  name: osu.Framework.Bindables
  nameWithType: osu.Framework.Bindables
  fullName: osu.Framework.Bindables
  spec.csharp:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Bindables
    name: Bindables
    href: osu.Framework.Bindables.html
  spec.vb:
  - uid: osu
    name: osu
    href: osu.html
  - name: .
  - uid: osu.Framework
    name: Framework
    href: osu.Framework.html
  - name: .
  - uid: osu.Framework.Bindables
    name: Bindables
    href: osu.Framework.Bindables.html
